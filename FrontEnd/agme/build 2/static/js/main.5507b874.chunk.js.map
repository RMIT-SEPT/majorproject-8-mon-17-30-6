{"version":3,"sources":["functions/utils.js","functions/operations.js","pages/Login.js","model/Entity.js","model/Booking.js","pages/users/EmployeeAvailability.js","pages/users/UserNewAppointment.js","pages/providers/Provider.js","pages/administrators/Administrator.js","pages/company/CompanyAppointmentList.js","pages/company/CompanyDashboard.js","pages/employee/EmployeeDashboard.js","pages/LandingPage.js","model/User.js","miscelaneous/FormFields.js","miscelaneous/SelectOptions.js","pages/Signup.js","pages/Help.js","model/Employee.js","model/Provider.js","pages/users/ViewProviders.js","pages/providers/ProviderNavigationBar.js","pages/users/UpcomingAppointments.js","pages/company/AgmeServices.js","pages/users/UserServices.js","pages/users/ComponentsHandler.js","pages/users/UserNavigationBar.js","pages/administrators/AdminNavigationBar.js","pages/visitors/VisitorNavigationBar.js","pages/company/CompanyServices.js","pages/company/AddExistingService.js","pages/company/EmployeeAvailability.js","pages/company/EmployeeSchedule.js","pages/company/ViewEmployees.js","pages/company/ComponentsHandler.js","pages/company/CompanyNavigationBar.js","model/EmployeeAvailabilityManager.js","pages/employee/DailySchedule.js","pages/employee/AppointsManagement.js","pages/employee/ComponentsHandler.js","pages/employee/EmployeeNavigationBar.js","pages/NavigationBar.js","miscelaneous/CustomisedError.js","App.js","serviceWorker.js","index.js"],"names":["crypto","require","sha512","password","salt","hash","createHmac","update","passwordHash","digest","module","exports","generateSaltAndHash","userpassword","length","randomBytes","Math","ceil","toString","slice","decodeJwt","jwt","base64","split","replace","jsonPayload","decodeURIComponent","atob","map","c","charCodeAt","join","JSON","parse","getDecodedJwtFromLocalStorage","credentials","localStorage","getItem","stringifiedJwtPayload","buff","Buffer","config","fetchFromApi","endpoint","uri","options","a","testResponse","response","RegExp","test","status","r","statusCode","json","body","text","fetch","getJwt","e","apiCall","userType","service","payload","type","url","api","method","mode","headers","Accept","Authorisation","stringify","companyCalls","then","setItem","username","sub","services","available","forEach","company","filter","push","employeeCalls","userCalls","getResources","authDetails","role","console","log","Login","props","state","isCallingServer","failed","error","handleAuthenticateRequest","bind","handleInputChange","_isMounted","this","clear","setState","handleAuthentication","removeItem","Button","variant","Spinner","animation","className","onClick","preventDefault","name","target","value","placeholder","onChange","required","disabled","defaultValue","showError","showAuthenticateButton","handleContentChangeRequest","React","Component","Entity","data","Object","keys","key","Booking","field","Date","Number","startDateTime","getDateTime","getTime","time","date","setHours","toISOString","availabilities","serviceType","duration","employeeUsername","day","getDate","month","getMonth","getFullYear","dateTime","year","getHours","getMinutes","hour","getDDYYMMYY","getDDYYMMYYHH","id","companyName","contactNumber","phone","workerName","employee","EmmployeeAvailability","selectedEmployee","isUpdatingAvailability","employeeOptions","availability","i","times","timeOptions","Fragment","booking","setTime","updateBooking","setEmployeeUsername","UserNewAppointment","called","newCall","getServicesStatus","calledTime","calledDays","employees","array","timeSlots","classname","upcBookings","handleBookingChange","handleBookingRequestForUser","getAllServices","changeClass","upcomingBookings","appointments","allServices","servicetypes","setField","getAvailability","index","d","initial","setDate","dates","toDateString","handleBookingRequest","bookings","alert","appointment","getBookingInfo","columns","dataField","textFilter","comparator","Comparator","LIKE","keyField","filterFactory","showUpcoming","showDuration","showDates","isComplete","Provider","description","entity","addNewSubmit","Administrator","isValid","showCompanies","closeACompany","refs","btn","setAttribute","removeAttribute","ref","displayCompanies","showCloseBusiness","CompanyAppointmentList","haveDataFromServer","time2","substr","CompanyDashboard","EmployeeDashboard","LandingPage","content","authenticated","toUpperCase","User","address","email","confirmPassword","FormFields","fields","SelectOptions","option","label","functions","errorMessages","signup","Signup","errors","Set","handleSignupRequest","errorDetails","missingFields","has","COMPANY","arr","companyUsername","showFieldsBasedOnRole","showCompanyInput","showSignupButtonButton","Help","serviceName","message","sent","handleReportRequest","rows","cols","showSubmitButton","Employee","string","ViewProviders","showModal","closeModal","companies","providers","provider","Prodiver","formattedProvider","ProviderNavigationBar","decodedJwtPayload","Navbar","Brand","href","Toggle","aria-controls","Collapse","Nav","Link","NavDropdown","title","Item","handleSelectNavBar","Divider","exp","iat","color","size","handleLogout","logoutButton","UpcomingAppointments","isDeletingBooking","deleted","deletedFailed","handleDeleteClick","bookingId","shoModal","Modal","show","Dialog","Header","Title","Body","Footer","getDateString","action","isOldBooking","modal","AgmeServices","filterByUsername","done","UserServices","_idMounted","ComponentsHandler","userNewAppointment","upcomingAppointments","userServices","viewProviders","component","UserNavigationBar","expired","AdminNavigationBar","bg","expand","VisitorNavigationBar","CompanyServices","AddExistingService","companyServices","availableServices","s","all","add","hasService","button","isDuplicate","showInputFields","EmployeeAvailability","updateCounter","bookingTime","includes","availableTimes","Array","from","delete","availabilityComponent","findBookingByTime","deleteBooking","EmployeeSchedule","handleSelectDate","getBookings","bookingsDictionary","htmlFor","ViewEmployees","callDeleteBooking","handleSelectEmployee","currentTarget","agmeServices","addExistingServices","viewEmployees","viewBookings","CompanyNavigationBar","EmployeeAvailabilityManager","callback","availabilityManagerIsReady","getDummyUser","filterAppointmentsByDate","filteredAppointments","user","newBooking","Error","employeeBookings","filteredBookings","b","DailySchedule","selectedAppointment","employeeAvailabilityManager","isDummyAppointment","blockTime","details","modalTitle","modalBody","modalFooter","AppointsManagement","updateComponent","dummyUserStatus","appointmentsStatus","appointsManagement","employeeDashboard","EmployeeNavigationBar","NavigationBar","token","errorId","CustomisedError","hasError","errorInfo","children","App","handleContentChangeRequestSignup","expiry","isComponent","getAttribute","componentName","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch"],"mappings":"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","file":"static/js/main.5507b874.chunk.js","sourcesContent":["var crypto = require('crypto');\n//const v4 = require('uuid/v4')\n\n\n\n/**\n * hash password with sha512.\n * @function\n * @param {string} password - List of required fields.\n * @param {string} salt - Data to be validated.\n */\nvar sha512 = function(password, salt){\n    var hash = crypto.createHmac('sha512', salt); /** Hashing algorithm sha512 */\n    hash.update(password);\n    var value = hash.digest('hex');\n    return {\n        salt:salt,\n        passwordHash:value\n    };\n};\n\n\n/**\n * generates random string of characters i.e salt\n * @function\n * @param {number} length - Length of the random string.\n */\nvar genRandomString = function(length){\n    return crypto.randomBytes(Math.ceil(length/2))\n            .toString('hex') /** convert to hexadecimal format */\n            .slice(0,length);   /** return required number of characters */\n};\n\nconst generateSaltAndHash=(userpassword)=> {\n    var salt = genRandomString(16); /** Gives us salt of length 16 */\n    var passwordData = sha512(userpassword, salt);\n    return passwordData\n}\n\nconst decodeJwt = (jwt)=>{\n    var base64Url = jwt.split('.')[1];\n    var base64 = base64Url.replace(/-/g, '+').replace(/_/g, '/');\n    var jsonPayload = decodeURIComponent(atob(base64).split('').map(function(c) {\n        return '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2);\n    }).join(''));\n    return JSON.parse(jsonPayload)\n}\nconst getDecodedJwtFromLocalStorage =() =>{\n    // Get JWT Header, Payload and Signature\n    const credentials = JSON.parse(localStorage.getItem('credentials'));\n    if(!credentials){\n        return null;\n    }\n    const stringifiedJwtPayload = credentials.jwt.split('.')[1];\n    //decode payload\n    let data = stringifiedJwtPayload;\n    let buff = new Buffer(data, 'base64');\n    return JSON.parse(buff.toString('ascii'));\n\n}\nmodule.exports = {generateSaltAndHash, sha512, decodeJwt, getDecodedJwtFromLocalStorage}","const config = require('../config.json')\n/***\n * Generic function to call apis\n * ***/\nconst fetchFromApi = async(endpoint,uri,options)=>{\n    /***\n     * Internal function to test and format response from api\n     * **/\n    const testResponse = async (response)=>{\n        try{\n            if(RegExp('^2[0-9]{2}$').test(response.status)){\n                let r = {statusCode:response.status}\n                try{\n                    r.body = await response.json()\n                }catch(e){\n                    r.body = \"\"\n                }\n                return r\n            }else{\n                throw response;\n            }\n\n        }catch(error){\n            return {\n                statusCode: error.status||-1,\n                body: await error.text()\n            }\n        }\n    }\n    try{\n        const response = await fetch(endpoint+uri,options);\n        return testResponse(response)\n    }catch(error){\n        return {\n            statusCode: -1,\n            body: \"Could not reach the server. Please verify your internet connection.\"\n        }\n    }\n\n}\n\n/****\n *  Returns a JWT token from localStorage or null if there is not one\n * ***/\nconst getJwt = ()=>{\n    try{\n        return \"Bearer \"+JSON.parse(localStorage.getItem('credentials')).jwt\n    }catch(e){\n        return null;\n    }\n}\nconst getDecodedJwtFromLocalStorage = () =>{\n    // Get JWT Header, Payload and Signature\n    const stringifiedJwtPayload = localStorage.getItem('credentials')&&localStorage.getItem('credentials').split('.')[1];\n    if(!stringifiedJwtPayload){\n        return null;\n    }\n    //decode payload\n    let data = stringifiedJwtPayload;\n    let buff = new Buffer(data, 'base64');\n    return JSON.parse(buff.toString('ascii'));\n\n}\n\n/**\n * Generic API call\n ***/\nconst apiCall = async(userType, service, payload, type)=>{\n    const url = config.api.url;\n    const uri = config.api.uri[userType][service]\n    let options = {\n        method: type,\n        mode:\"cors\",\n        headers: {\n            \"Content-Type\": \"application/JSON\",\n            Accept: \"application/JSON\",\n            'Access-Control-Allow-Origin': '*',\n            Authorisation: \"\"\n        }\n    }\n   \n\n    payload&&(options.body =JSON.stringify(payload));\n    getJwt() && (options.headers.Authorisation = getJwt());\n    const response = await fetchFromApi(url,uri,options);\n    return response;  \n}\n\n/***\n * To be called upon login so that UI is faster\n * ***/\nconst companyCalls = async() =>{\n    apiCall('company', 'getAllServices','','GET').then(response=>{\n        if(response.statusCode===200){\n            if(response.body.length){\n                localStorage.setItem(\"agme_all_services\", JSON.stringify(response.body));\n                const username = getDecodedJwtFromLocalStorage().sub;\n                \n                let services = [];// current company services\n                let available = []; //to store services available in Agme but that company does not have\n                response.body.forEach(service=>{\n                    const hasService = service.company.filter(company=>{return company.username===username}).length\n                    if(hasService){\n                        services.push(service);\n                    }else{\n                        available.push(service);\n                    }\n                })\n                localStorage.setItem(\"company_services\", JSON.stringify(services));\n                localStorage.setItem(\"company_available_services\", JSON.stringify(available));\n            }\n        }\n    })\n    apiCall('company', 'getBookings','','GET').then(response=>{\n        if(response.statusCode===200){\n            (response.body.length)&&localStorage.setItem(\"company_bookings\", JSON.stringify(response.body));\n        }\n    })\n    apiCall('company', 'getEmployees','','GET').then(response=>{\n        if(response.statusCode===200){\n            (response.body.length)&&localStorage.setItem(\"company_employees\", JSON.stringify(response.body));\n        }\n    })\n}\n\nconst employeeCalls = async() =>{\n    apiCall('employee', 'getBookings','','GET').then(response=>{\n        if(response.statusCode===200){\n            (response.body.length)&&localStorage.setItem(\"employee_bookings\", JSON.stringify(response.body));\n        }\n    });\n\n    //get dummy user now, so the employee can use it to block time slots...\n    const payload = {\n        \"username\": \"dummy\",\n        \"password\": \"12345678\",\n        \"role\": \"USER\"\n    }\n    apiCall('common', 'login', payload, 'post').then(response=>{\n        if(response.statusCode===200){\n            localStorage.setItem('employee_dummy_user_credentials',JSON.stringify(response.body))\n        }\n    });\n}\n\nconst userCalls = async ()=>{\n    apiCall('user', 'getBookings','','GET').then(response=>{\n        if(response.statusCode===200){\n            (response.body.length)&&localStorage.setItem(\"user_bookings\", JSON.stringify(response.body));\n        }\n    });\n    apiCall('user', 'upcomingBookings','','GET').then(response=>{\n        if(response.statusCode===200){\n            (response.body.length)&&localStorage.setItem(\"user_upcoming-bookings\", JSON.stringify(response.body));\n        }\n    });\n    apiCall('user', 'getAllServices','','GET').then(response=>{\n        if(response.statusCode===200){\n            (response.body.length)&&localStorage.setItem(\"user_services\", JSON.stringify(response.body));\n            //duplicated here, but allows reusing some components\n            (response.body.length)&&localStorage.setItem(\"agme_all_services\", JSON.stringify(response.body));\n        }\n    });\n    apiCall('user', 'companies','','GET').then(response=>{\n        if(response.statusCode===200){\n            (response.body.length)&&localStorage.setItem(\"user_companies\", JSON.stringify(response.body));\n        }\n    });\n}\n\nconst getResources = async() =>{\n    const authDetails = getDecodedJwtFromLocalStorage();\n    if(!authDetails){\n        return;\n    }\n    const role = authDetails.role;\n    console.log(role)\n    switch(role){\n        case 'COMPANY':\n            companyCalls();\n            break;\n        case 'EMPLOYEE':\n            employeeCalls();\n            break;\n        case 'USER':\n            userCalls();\n            break;            \n        default:\n            break;\n    }\n}\n\nmodule.exports = {\n    getDecodedJwtFromLocalStorage,\n    fetchFromApi,\n    apiCall,\n    getResources\n}\n","import React from 'react';\nimport Button from \"react-bootstrap/Button\";\nimport './css/login.css';\nimport Spinner from 'react-bootstrap/Spinner'\n\nconst {apiCall} = require('../functions/operations')\n\n/***\n * Basic flow: This component should simply handle authentication.\n *  When authentication is succesfull (backend returns 200), the authentication details should propagate to\n *  the parent component App.js which should then display the LandingPage.js\n * ***/\nexport default class Login extends React.Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            isCallingServer: false,\n            failed: false,\n            error: null,\n            username: \"\",\n            password: \"\",\n            role: \"\"\n        };\n        this.handleAuthenticateRequest = this.handleAuthenticateRequest.bind(this);\n        this.handleInputChange = this.handleInputChange.bind(this);\n        this._isMounted = false;\n    }\n\n    componentDidMount(){\n        this._isMounted = true;\n    }\n\n    componentWillUnmount(){\n        this._isMounted = false;\n    }\n\n    handleAuthenticateRequest(){\n        localStorage.clear(); //to make sure localStorage is clean whenever we login again\n\n        //mock for now\n        this.setState({isCallingServer:true});\n        const payload = {\n            username:this.state.username,\n            password: this.state.password,\n            role: this.state.role\n        }\n        apiCall('common','login',payload, 'post').then(response=>{\n            if(response){\n                if(response.statusCode===200){\n                    localStorage.setItem('credentials', JSON.stringify(response.body));\n                    this._isMounted&&this.setState({isCallingServer:false});\n                    this.props.handleAuthentication(); //propagate response with token\n                }else{\n                    localStorage.removeItem('credentials')\n                    this._isMounted&&this.setState({isCallingServer:false, failed:true,error:response.body})\n                }\n            }else{\n                this._isMounted&&this.setState({isCallingServer:false, failed:true,error:\"No response from the server. Either the server your internet connection is down.\"})\n            }\n\n        })\n        \n    }\n\n    showAuthenticateButton(){\n        if(this.state.isCallingServer){\n            return <Button variant={\"secondary\"}><Spinner animation=\"border\" role=\"status\">\n          </Spinner> Authenticating...</Button>\n        }\n        if(this.state.password&&this.state.username&&this.state.role&&(!this.state.isCallingServer)){\n            return <Button variant=\"success\" className=\"authenticate_button\" onClick={this.handleAuthenticateRequest}>Authenticate</Button>\n        }\n    }\n\n    handleInputChange(e){\n        e.preventDefault();\n        const name = e.target.name;\n        const value = e.target.value;\n        this.setState({[name]:value})\n    }\n\n    showError(){\n        if(this.state.error){\n        return <p className=\"errorInfo\">{this.state.error||\"Invalid Credentials supplied!\"}</p>\n        }else{\n            return <p></p>\n        }\n    }\n\n    render(){\n        return (\n            <div className=\"login_outter\">\n                <div className={\"login\"}>\n                <h3 className=\"title\">You are not authenticated</h3>\n                <div className=\"form-container\">\n                <br/><br/>\n                <input type=\"text\" name={\"username\"} value={this.state.username} placeholder=\"Username\" className=\"form-control\" onChange={this.handleInputChange}/>\n                <br/>\n                <input type=\"password\" name={\"password\"} value={this.state.password} className=\"form-control\" placeholder=\"Password\" onChange={this.handleInputChange}/>\n                <br/>\n                <select className=\"form-control\" name={\"role\"} value={this.state.role} required placeholder=\"role\" onChange={this.handleInputChange}>\n                <option value=\"\" disabled defaultValue>Choose a role</option>\n                <option value=\"USER\">User</option>\n                <option value=\"COMPANY\">Company</option>\n                <option value=\"EMPLOYEE\">Employee</option>\n                <option value=\"ADMIN\">Admin</option>\n\n                </select>\n                <br/>\n                    {this.showError()}\n                    {this.showAuthenticateButton()}\n                    <p name=\"signup\" className=\"signup_info\" onClick={this.props.handleContentChangeRequest}>Or click here to Sign up</p>\n                </div>\n            </div>\n            </div>\n        )\n    }\n}\n","export default class Entity{\n    constructor(data){\n        data&&Object.keys(data).forEach(key=>{\n            this[key] = data[key]\n        })\n    }\n\n    setField(key, value){\n        this[key] = value;\n    }\n\n\n}","import Entity from './Entity';\nconst {apiCall} = require('../functions/operations');\n\nexport default class Booking extends Entity{\n    constructor(data){\n        super(data);\n        const fields = [\"serviceType\",\"duration\"]\n        fields.forEach(field=>{\n            if(!this[field]){\n                this[field]= \"\"\n            }\n        });\n    }\n\n    getDateTime(){\n        return new Date(Number(2000+Number(this.startDateTime.split(\"-\")[2].split(\" \")[0])),this.startDateTime.split(\"-\")[1]-1,this.startDateTime.split(\"-\")[0],this.startDateTime.split(\" \")[1].split(\":\")[0]);\n    }\n\n    isOldBooking(){\n        return this.getDateTime().getTime()<(new Date().getTime())\n    }\n\n    setTime(time){\n        this.date = new Date(this.date)\n        this.date.setHours(time)\n        this.date = this.date.toISOString();\n    }\n\n    setField(key,value){\n        this[key] = value;\n        this.availabilities = null;\n    }\n\n    isComplete(){\n        if(!(this.serviceType&&this.date&&this.duration&&this.employeeUsername)){\n            return false;\n        }\n        return true;\n    }\n\n    setEmployeeUsername(username){\n        this.employeeUsername = username\n    }\n    //sets object date to format dd-mm-yy from a Javascript Date Object type\n    getDDYYMMYY(){\n        if(this.date){\n            const date = new Date(this.date);\n            const day = date.getDate() < 10 ? \"0\"+date.getDate() : date.getDate();\n            const month = (date.getMonth()+1) < 10 ? \"0\"+(date.getMonth()+1) : (date.getMonth()+1);\n            const year = date.getFullYear();\n            const fullDate = year + \"-\" + month + \"-\" + day;\n            return fullDate;\n        }\n    }\n\n    getDateString(){\n        const dateTime = this.getDateTime();\n        const year = dateTime.getFullYear();\n        const month = (dateTime.getMonth()+1) < 10 ? \"0\"+(dateTime.getMonth()+1) : dateTime.getMonth()+1;\n        const date = (dateTime.getDate()) < 10 ? \"0\"+(dateTime.getDate()) : dateTime.getDate();\n        const hours = dateTime.getHours();\n        const minutes = dateTime.getMinutes() < 10 ? \"0\"+dateTime.getMinutes() : dateTime.getMinutes();\n        return date+\"/\"+month+\"/\"+year+\" - \"+hours+\":\"+minutes;\n    }\n\n    getDDYYMMYYHH(){\n        if(!this.date){\n            return \"\"\n        }\n        //there is an issue if hour does not have 2 digits\n        const hour = new Date(this.date).getHours() < 10 ? \"0\"+new Date(this.date).getHours().toString() : new Date(this.date).getHours();\n        const finalDateTime = this.getDDYYMMYY() + 'T' + hour + ':00:00'\n        return finalDateTime;\n    }\n\n    async handleBookingRequest(){\n        const payload = {\n            \"serviceType\": this.serviceType,\n            \"date\": this.getDDYYMMYYHH(),\n            \"duration\": this.duration,\n            \"employeeUsername\": this.employeeUsername\n        }\n        return apiCall('user', 'newBooking', payload, 'post')\n    }\n\n    getBookingInfo(){\n        return {\n            id: this.id,\n            startDateTime: this.startDateTime.toString(),\n            duration: this.duration,\n            service: this.serviceType.name,\n            companyName:this.company.name,\n            contactNumber: this.company.phone,\n            workerName: this.employee.name\n        }\n    }\n    async getAvailability(){\n        if((!this.serviceType)||(!this.date)||(!this.duration)){\n            return null;\n        }\n        const payload = {\n            \"serviceName\": this.serviceType,\n            \"date\": this.getDDYYMMYY(),\n            \"duration\": this.duration\n        }\n        return apiCall('user','getAvailability', payload, 'post').then(response=>{\n            if(response.statusCode===200){\n                this.availabilities = response.body;\n            }\n            return response;\n        });\n    }\n    }","import '../css/userDash.css';\nimport React from 'react';\nimport Spinner from 'react-bootstrap/Spinner';\n\nexport default class EmmployeeAvailability extends React.Component{\n\n    constructor(props){\n        super(props)\n        this.state = {\n            availabilities: this.props.availabilities,\n            selectedEmployee: \"\"\n        }\n    }\n    render(){\n        if(this.props.isUpdatingAvailability){\n            return <div>\n                <div className=\"spinnerOutter\">\n                    <Spinner animation=\"border\" role=\"status\">\n                        <span className=\"sr-only\">Loading...</span>\n                    </Spinner>\n                </div>\n                <p>Please wait while we retrieve availability. Please select a date if you haven't done it already</p>\n            </div>\n        }\n        if(this.props.availabilities){\n            if((this.props.availabilities.length>0)){\n                const employeeOptions = this.props.availabilities.map((availability,i)=>{\n                    return (\n                        <option key={i+1} value={availability.username}>{availability.name}</option>\n                    )\n                });\n                const times = this.state.selectedEmployee&&this.props.availabilities.filter(availability=>{\n                    return availability.username === this.state.selectedEmployee\n                });\n                const timeOptions = times&&(times.length>0)&&(\n                    <React.Fragment>\n                        <label>Time</label>\n                        <select\n                            name=\"time\"\n                            defaultValue=\"DEFAULT\"\n                            className=\"form-control\"\n                            onChange={e=>{\n                                e.preventDefault();\n                                this.props.booking.setTime(e.target.value);\n                                this.props.updateBooking(); //to force parent to re-render\n                            }} \n                        >\n                            <option key={0} value={\"DEFAULT\"} disabled>Choose time</option>\n    \n                            {\n                                times[0].availability.map((time,i)=>{\n                                    return (\n                                        <option key={i+1} value={time}>{`${time}:00:00`}</option>\n                                    )\n                                })\n                            }\n                        </select>\n                    </React.Fragment>\n                )\n    \n                return (\n                    <div>\n                 <React.Fragment>\n                    <label>Select an employee</label>\n                    <select \n                        defaultValue=\"DEFAULT\"\n                        className=\"form-control\" \n                        name={\"employeeUsername\"}\n                        onChange={e=>{\n                            e.preventDefault();\n                            this.setState({selectedEmployee:e.target.value})\n                            this.props.booking.setEmployeeUsername(e.target.value)\n                        }} \n                    >\n                        <option key={0} value={\"DEFAULT\"} disabled>Select an employee</option>\n                        {employeeOptions}\n                    </select>      \n            </React.Fragment>\n            {timeOptions}                   \n                    </div>\n                )\n            }else{\n                return (\n                    <div>\n                    No time available for this date and duration\n                    </div>\n                )\n            }\n        }else{\n            return \"\";\n        }\n    }\n}","import '../css/userDash.css';\nimport React from 'react';\nimport Booking from '../../model/Booking';\nimport EmplpoyeeAvailability from './EmployeeAvailability';\nimport Spinner from 'react-bootstrap/Spinner';\nimport Button from 'react-bootstrap/Button';\nimport filterFactory, { textFilter, Comparator } from 'react-bootstrap-table2-filter';\nimport { FcAlarmClock, FcDownload } from \"react-icons/fc\";\nimport {AiFillSchedule} from \"react-icons/ai\";\nimport BootstrapTable from 'react-bootstrap-table-next';\nconst {apiCall} = require('../../functions/operations')\n\nexport default class UserNewAppointment extends React.Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            booking: new Booking({}),\n            isCallingServer: true,\n            options: [],\n            called: false,\n            newCall: false,\n            getServicesStatus: null,\n            calledTime: false,\n            calledDays: false,\n            employees: [],\n            employee: \"\",\n            array: [],\n            timeSlots: [],\n            classname: \"upcomingApt\",\n            upcBookings: 0\n        };\n        this.handleBookingChange = this.handleBookingChange.bind(this);\n        this.handleBookingRequestForUser = this.handleBookingRequestForUser.bind(this);\n        this.getAllServices = this.getAllServices.bind(this);\n        this.updateBooking = this.updateBooking.bind(this)\n        this.changeClass = this.changeClass.bind(this);\n        this._isMounted = false;\n    }\n\n    componentWillUnmount(){\n        this._isMounted = false;\n    }\n    componentDidMount(){\n        this._isMounted = true;\n        //only make api call if necessary\n        this.getAllServices();\n        const upcomingBookings = localStorage.getItem('user_upcoming-bookings') ? JSON.parse(localStorage.getItem('user_upcoming-bookings')) : [];\n        if(upcomingBookings&&upcomingBookings.length){\n            this.setState({appointments:upcomingBookings, failed: false, newCall: true})\n        }else{\n            apiCall('user', 'upcomingBookings',null,'get').then(r=>{\n                if(r.statusCode===200){\n                    if(this._isMounted){\n                        this.setState({appointments:r.body, failed: false, newCall: true})\n                    }\n                }else{\n                    if(this._isMounted){\n                        this.setState({failed: true, newCall: true})\n                    } \n                }\n            });\n        }\n        \n    }\n    updateBooking(e){\n        e&&e.preventDefault();\n        const booking = new Booking(JSON.parse(JSON.stringify(this.state.booking)));\n        this._isMounted&&this.setState({booking:booking})\n    }\n    //Calls getService API and populates service options\n    getAllServices(){\n        //only call api if it hasnt been called yet\n        //only call it is there is no state.httpStatusCode\n        if(!this.state.getServicesStatus){\n            const allServices = localStorage.getItem('user_services') ? JSON.parse(localStorage.getItem('user_services')) : [];\n\n            if(allServices&&allServices.length){\n                let options = [<option key={0} value={\"DEFAULT\"} disabled>Choose a Service</option>];\n                allServices.forEach((service,i)=>{\n                    options.push(<option key={i+1} value={service.name}>{service.name}</option>);\n                })\n                this.setState({\n                    getServicesStatus: 200,\n                    options:options\n                })\n            }else{\n                apiCall('user', 'getAllServices', null,'get').then(response=>{\n                    let options = this.state.options;\n                    if(response.statusCode===200){\n                        this._isMounted&&this.setState({isCallingServer:false});\n                        var servicetypes = [];\n                        var i = 1;\n                        servicetypes.push(<option key={0} value={\"DEFAULT\"} disabled>Choose a Service</option>);\n                        response.body.forEach((serviceType) =>\n                        servicetypes.push(<option key={serviceType.name} value={serviceType.name}>{serviceType.name}</option>),i++);\n                        options = servicetypes;\n                    }\n                    this._isMounted&&this.setState({\n                        getServicesStatus: response.statusCode,\n                        options:options\n                    })\n                    }\n                )\n            }\n            \n        }\n    }\n\n    handleBookingChange(e){\n        e.preventDefault();\n        const key = e.target.name;\n        const value = e.target.value;\n        const booking = new Booking(JSON.parse(JSON.stringify(this.state.booking)));\n        booking.setField(key,value)\n        this._isMounted&&this.setState({booking:booking, availabilities: null}, function (){\n            if((key==='date')||(key==='duration')){\n                this.setState({isUpdatingAvailability:true})\n                this.state.booking.getAvailability().then(response=>{\n                    if(response){\n                        if(response.statusCode===200){\n                            const booking = new Booking(JSON.parse(JSON.stringify(this.state.booking)));\n                            booking.availabilities = response.body\n                            this._isMounted&&this.setState({isUpdatingAvailability:false,booking:booking, isCallingServer:false, availabilities: response.body})\n                        }\n                    }\n                })\n            }\n        });\n\n    }\n\n    handleTimeValue(index){\n        var options = [];\n        for (var i =0; i<this.state.array[index-1].length ;i++){\n                options.push(<option key={i} value={this.state.array[index-1][i]}>{this.state.array[index-1][i]}</option>);\n        }\n        this._isMounted&&this.setState({timeSlots:options});\n\n    }\n\n    getNextDate(date){\n        return new Date(date.getTime()+1*24*60*60*1000);\n    }\n    //displays the days that can be booked\n    showDuration(){\n        if (this.state.booking.serviceType !== \"\"){\n            return (\n            <React.Fragment>\n                <label>Duration</label>\n                <select\n                    defaultValue=\"DEFAULT\"\n                    className=\"form-control\"\n                    name={\"duration\"}\n                    onChange={this.handleBookingChange}\n                >\n                    <option key={0} value={\"DEFAULT\"} disabled>Choose a duration</option>\n                    {[1,2,3,4].map((d)=>{return <option key={d} value={d}>{d} hour(s)</option>})}\n                </select>\n            </React.Fragment>\n            )\n        }\n    }\n\n    showDates(){\n        if(this.state.booking.duration){\n            let initial = new Date();\n            initial.setDate(initial.getDate() + 2);\n            const dates = []\n            for(let i = 0 ; i < 30; i++){\n                dates.push(\n                    <option key={i+1} value={initial.toString()}>\n                        {initial.toDateString()}\n                    </option>\n                  )\n                initial.setDate(initial.getDate() + 1)\n            }\n            return (\n                <React.Fragment>\n                    <label>Date</label>\n                    <select defaultValue=\"DEFAULT\" className=\"form-control\" name={\"date\"} onChange={this.handleBookingChange}>\n                        <option key={0} value={\"DEFAULT\"} disabled>Choose a date</option>\n                        {dates}\n                    </select><br></br>\n                </React.Fragment>\n            )\n        }\n    }\n\n    handleBookingRequestForUser(){\n        //mock for now\n        this._isMounted&&this.setState({isCallingServer:true});\n        this.state.booking.handleBookingRequest()\n        .then(response=>{\n            if(response.statusCode===200){\n                this._isMounted&&this.setState({isCallingServer:false,isUpdatingAvailability:false});\n                //update localstorage\n                let bookings = localStorage.getItem('user_bookings') ? JSON.parse(localStorage.getItem('user_bookings')) : []\n                if(bookings&&bookings.length){\n                    bookings.push(response.body)\n                }\n                localStorage.setItem('user_bookings',JSON.stringify(bookings))\n                alert(\"booking successful\");\n            }else{\n                this._isMounted&&this.setState({isCallingServer:false, failed:true,error:response, isUpdatingAvailability:false})\n            }\n        })\n    }\n\n\n    showUpcoming(){\n        if(!this.state.newCall){\n            return <div className=\"calling\">\n                <div className=\"spinnerOutter\">\n                <Spinner animation=\"border\" role=\"status\">\n                    <span className=\"sr-only\">Loading...</span>\n                </Spinner>\n                </div>\n                <br/>\n                <p>Please wait while we retrieve your bookings.</p>\n\n            </div>\n        }else{\n            if(this.state.failed){\n                return \"\";\n            }else{\n            let upcBookings = this.state.appointments.length;\n\n            const data = this.state.appointments.map(appointment=>{\n                return new Booking(appointment).getBookingInfo();\n            })\n            //table build\n            const columns = [{\n                dataField: 'id',\n                text: 'Booking id'\n              }, {\n                dataField: 'startDateTime',\n                text: 'Date / Time',\n                filter: textFilter({\n                  comparator: Comparator.LIKE\n                })\n              },  {\n                dataField: 'duration',\n                text: 'Duration (h)',\n                filter: textFilter({\n                  comparator: Comparator.LIKE\n                })\n              },{\n                dataField: 'service',\n                text: 'Service',\n                filter: textFilter()\n              }, {\n                dataField: 'companyName',\n                text: 'Company',\n                filter: textFilter()\n              }, {\n                dataField: 'contactNumber',\n                text: 'Telephone',\n                filter: textFilter()\n              }, {\n                dataField: 'workerName',\n                text: 'Provider name',\n                filter: textFilter()\n              }\n            ];\n\n            return (\n                <div>\n                    <div className=\"title\">\n                    <p>\n                      <FcAlarmClock className=\"alarm\"/> Upcoming Apointments (Next 48h)\n                      </p>\n\n                    </div>\n                        <div className=\"body\">\n                        <p>\n                          You have {upcBookings} appointments coming soon.\n                        </p>\n                            <Button onClick={this.changeClass} variant={this.state.classname==='noClass' ? \"danger\" : \"success\"} className=\"showUpcomming\">{this.state.classname==='noClass' ? \"Hide\" : \"View\"}</Button>\n                        <div className={this.state.classname}>\n                        <div className=\"upcoming_appointments_table\" >\n                            <BootstrapTable keyField='id' data={ data } columns={ columns } filter={ filterFactory() } />\n                        </div>\n                        </div>\n                        </div>\n                </div>\n              )\n            }\n        }\n    }\n    changeClass(){\n        if (this.state.classname === \"upcomingApt\"){\n            this._isMounted&&this.setState({classname:\"noClass\"});\n        }else{\n            this._isMounted&&this.setState({classname:\"upcomingApt\"});\n\n        }\n\n    }\n    render(){\n        if(this.state.getServicesStatus){\n            if(this.state.getServicesStatus===200){\n                return (\n                    <div className=\"newAppointmentOutter\">\n                        <React.Fragment>\n                        <div className={\"new-booking\"}>\n                         {this.showUpcoming()}\n                        </div>\n                      \n                      <div className={\"new-booking\"}>\n                          <div className=\"title\">\n                              <AiFillSchedule className=\"alarm\"/>\n                              <h3>New Booking</h3>\n                          </div>\n                          <div className=\"body\">\n                              <br/>\n                              <React.Fragment>\n                                  <label>Service</label>\n                                  <select value={this.state.booking.serviceType||\"DEFAULT\"} className=\"form-control\" name={\"serviceType\"} onChange={this.handleBookingChange}>{this.state.options}</select>\n                              </React.Fragment>\n                              <br/>\n                              {this.showDuration()}\n                              <br/>\n                              {this.showDates()}\n                              <EmplpoyeeAvailability isUpdatingAvailability={this.state.isUpdatingAvailability} updateBooking={this.updateBooking} booking={this.state.booking} availabilities={this.state.availabilities}/>\n                              <br/>\n                              {this.state.booking.isComplete() &&<button className=\"btn btn-success\" onClick={this.handleBookingRequestForUser}>Submit</button>}\n                              <br/>\n                          </div>\n                      </div>\n                    </React.Fragment>\n                    </div>\n                )\n            }else{\n                //getServices called but API failed?\n                return (\n                    <div className={\"new-booking\"}>\n                    <h3 className=\"title\">New Booking</h3>\n                    <div className=\"form-container\">\n                        <p>Unfortunately we could not load available services at this time.</p>\n                    </div>\n                    </div>\n                );\n            }\n        }else{\n            //hasnt even completed that call yet\n            return (\n                <div className={\"new-booking\"}>\n                <div className=\"title\">\n                <FcDownload className=\"alarm\"/>\n                    <h3>Retrieving services</h3>\n                </div>\n                <div className=\"body\">\n                <Spinner animation=\"border\" role=\"status\">\n                    <span className=\"sr-only\">Loading...</span>\n                </Spinner>\n                    <p>Please wait while we figure out what services are available to you.</p>\n                </div>\n                </div>\n            );\n        }\n\n    }\n}\n","import React from 'react';\nimport Entity from '../../model/Entity';\nimport '../css/provider.css'\nconst {apiCall} = require('../../functions/operations');\n\nexport default class Provider extends React.Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            isCallingServer: false,\n            failed: false,\n            error: null,\n            description: \"\",\n            name: \"\",\n            entity: new Entity()\n        };\n        this.handleInputChange = this.handleInputChange.bind(this);\n    }\n    addNewSubmit(){\n        apiCall('company', 'newService',this.state.entity,'post').then(r=>{\n            if (r.statusCode === 200){\n                alert(\"New service has been added\");\n            }\n        }\n        )\n    }\n    handleInputChange(e){\n        e.preventDefault();\n        const name = e.target.name;\n        const value = e.target.value;\n        this.state.entity.setField(e.target.name,e.target.value);\n        this.setState({[name]:value})\n    }\n    render(){\n        return (\n            <div className=\"newService\">\n            <h1>Add a new service</h1>\n            <label>Service Name</label>\n            <input name=\"description\" value={this.state.name} type=\"text\" onChange={this.handleInputChange}></input>\n            <label>Description</label>\n            <input name=\"name\" type=\"text\" value={this.state.description} onChange={this.handleInputChange}></input>\n            <button onClick={this.addNewSubmit()}>add new</button>\n            </div>\n        )\n    }\n}","import React from 'react';\nimport '../css/admin.css';\nimport Spinner from 'react-bootstrap/Spinner';\nimport '../../model/Entity'\nimport Entity from '../../model/Entity';\nconst {apiCall} = require('../../functions/operations')\n\nexport default class Administrator extends React.Component{\n    constructor(props){\n    super(props);\n    this.state = {\n        isCallingServer: false,\n        options: [],\n        isValid: false,\n        called: false,\n        company:\"\",\n        entity: new Entity()\n    };\n    this.showCompanies = this.showCompanies.bind(this);\n    this.handleInputChange = this.handleInputChange.bind(this);\n    this.closeACompany = this.closeACompany.bind(this);\n\n    \n}\n\nhandleInputChange(e){\n    e.preventDefault();\n    const name = e.target.name;\n    const value = e.target.value;\n    this.state.entity.setField(e.target.name,e.target.value);\n    console.log(value);\n    if (name === \"username\"){\n        this.setState({isValid:true})\n    }\n    this.setState({[name]:value})\n}\nshowCompanies(){\n    if (!this.state.isCallingServer){\n    apiCall('admin', 'closeCompany',null,'get').then(response=>{\n        let options = this.state.options;\n        if(response.statusCode===200){\n            var company = [];\n            var i = 1;\n            company.push(<option key={0} value={\"DEFAULT\"} defaultValue disabled>Choose a Business</option>);\n            // eslint-disable-next-line\n            response.body.forEach((c) =>\n            company.push(<option key={c.username} value={c.username}>{c.name}</option>),i++);\n            options = company;\n        }    \n        this.setState({\n            getServicesStatus: response.statusCode,\n            options:options,\n            isCallingServer:true\n        })\n    });\n}\n\n}\ncloseACompany(){\n    this.refs.btn.setAttribute(\"disabled\", \"disabled\");\n    apiCall('admin', 'closeCompany',this.state.entity,'post').then(response=>{\n        console.log(response)\n        if(response.statusCode===200){\n            alert(\"Cancellation successful\")\n            this.refs.btn.removeAttribute(\"disabled\");\n        }else{\n            alert(\"something went wrong\")\n            this.refs.btn.removeAttribute(\"disabled\");\n        }\n    })\n}\ndisplayCompanies(){\n    return <select defaultValue={\"DEFAULT\"} className=\"form-control\" name={\"username\"} onChange={this.handleInputChange}> {this.state.options}</select>     \n\n}\nshowCloseBusiness(){\n    if (this.state.isValid){\n    return <button ref=\"btn\" className=\"btn btn-danger form-control\" onClick={this.closeACompany}>close business</button>\n    }\n}\n\n    render(){\n        this.showCompanies();\n        console.log(this.state.isCallingServer);\n\n        if(!this.state.isCallingServer){\n            return <div className=\"closeBusiness\"><div className=\"calling\">\n                <div className=\"spinnerOutter\">\n                <Spinner animation=\"border\" role=\"status\">\n                    <span className=\"sr-only\">Loading...</span>\n                </Spinner>\n                </div>\n                <br/>\n                <p>Please wait while we retrieve your bookings.</p>\n            </div>\n            </div>\n        }else{\n        return (\n            <div className=\"closeBusiness\">\n            <label>Company</label>\n            {this.displayCompanies()}\n            <br></br>\n            {this.showCloseBusiness()}\n            </div>\n        )\n    }\n}\n}","import React from 'react';\nimport filterFactory, { textFilter, Comparator } from 'react-bootstrap-table2-filter';\nimport BootstrapTable from 'react-bootstrap-table-next';\nimport Booking from '../../model/Booking';\nimport Spinner from 'react-bootstrap/Spinner';\nconst {apiCall} = require('../../functions/operations');\n\nexport class CompanyAppointmentList extends React.Component{\n\n    constructor(props){\n        super(props);\n        this.state ={\n            haveDataFromServer: false\n        }\n        this._isMounted = false;\n    }\n\n    componentWillUnmount(){\n      this._isMounted = false;\n    }\n    componentDidMount() {\n      this._isMounted = true;\n      let appointments = localStorage.getItem('company_bookings')&&JSON.parse(localStorage.getItem('company_bookings'));\n      if(appointments && appointments.length){\n        this._isMounted&&this.setState({\"haveDataFromServer\":true, appointments:appointments})\n      }else{\n        apiCall('company', 'getBookings', null, 'get').then(response=>{\n          if(response.statusCode===200){\n            let appointments = response.body;\n            for (var i = 0; i < appointments.length; i++) {\n              var time = appointments[i].startDateTime.replace(' ','T');\n              var time2 = \"20\" + time.substr(6,2) + \"-\" + time.substr(3,2) + \"-\" + time.substr(0,2) + time.substr(8,9);\n              appointments[i].startDateTime = time2;\n            }\n            this._isMounted&&this.setState({\"haveDataFromServer\":true, appointments:appointments})\n          }\n      });\n      }\n    }\n\n    render(){\n      if (this.state.haveDataFromServer === false) {\n        return(\n        <Spinner animation=\"border\" role=\"status\">\n          <span className=\"sr-only\">Loading appointments</span>\n      </Spinner>);\n      }\n      else{\n        if (!(this.state.appointments||this.state.appointments.length)) {\n          return <p>\n            <h2>No Current Bookings.</h2>\n          </p>;\n        }\n        else {\n          const data = this.state.appointments.map(appointment=>{\n            return new Booking(appointment).getBookingInfo();\n          })\n          const columns = [{\n            dataField: 'id',\n            text: 'Booking id'\n          }, {\n            dataField: 'startDateTime',\n            text: 'Date / Time',\n            filter: textFilter({\n              comparator: Comparator.LIKE\n            })\n          },  {\n            dataField: 'duration',\n            text: 'Duration (h)',\n            filter: textFilter({\n              comparator: Comparator.LIKE\n            })\n          },{\n            dataField: 'service',\n            text: 'Service',\n            filter: textFilter()\n          }, {\n            dataField: 'companyName',\n            text: 'Company',\n            filter: textFilter()\n          }, {\n            dataField: 'contactNumber',\n            text: 'Telephone',\n            filter: textFilter()\n          }, {\n            dataField: 'workerName',\n            text: 'Provider name',\n            filter: textFilter()\n          }\n        ];\n          return (\n            <div className=\"upcoming_events_outter\">\n                <h3>Your upcoming events</h3>\n                <div className=\"upcoming_appointments_table\" >\n                            <BootstrapTable keyField='id' data={ data } columns={ columns } filter={ filterFactory() } />\n                </div>\n                    </div>\n          )\n          }\n      }\n      }\n\n}\n","import React from 'react';\nimport {CompanyAppointmentList} from './CompanyAppointmentList';\n\nexport default class CompanyDashboard extends React.Component{\n    constructor(props){\n        super(props);\n        this.state = {\n    \n        };\n   \n\n    }\n\n    render(){\n        return (\n            <CompanyAppointmentList/>\n            \n        )\n    }\n}\n","import React from 'react';\nexport default class EmployeeDashboard extends React.Component{\n    render(){\n        return (\n            <div>\n                You are authenticated.\n            </div>\n        )\n    }\n}","import React from 'react';\nimport Login from \"./Login\";\nimport UserNewAppointment from './users/UserNewAppointment';\nimport Provider from './providers/Provider';\nimport Administrator from './administrators/Administrator';\nimport CompanyDashboard from './company/CompanyDashboard';\nimport EmployeeDashboard from './employee/EmployeeDashboard';\n\n/**\n * Basic flow:\n *  LandingPage component is rendered when the App component has set up authentication details sucessfully\n *  The parent component (App) sends the authentication type as props, so this landing page should further call\n *  the appropriate component for each user type\n * \n * **/\nexport default class LandingPage extends React.Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            content: <Login handleContentChangeRequest={this.props.handleContentChangeRequest} handleAuthentication={this.props.handleAuthentication}/>\n            \n        }\n    }\n\n    render(){\n        if(this.props.authenticated){\n            switch(this.props.type.toUpperCase()){\n                case \"EMPLOYEE\":\n                    return <EmployeeDashboard/>;\n                case \"USER\":\n                    return <UserNewAppointment/>;\n                case \"COMPANY\":\n                    return <CompanyDashboard />;\n                case \"ADMIN\":\n                    return <Administrator/>;\n                case \"PROVIDER\":\n                    return <Provider />;\n                default:\n                    return <div>Cannot load your content</div>;            \n            }\n            \n        }else{\n            //something is not right - force reauthentication\n            return this.state.content;\n        }\n    }\n}","import Entity from './Entity';\nexport default class User extends Entity{\n    isComplete(){\n        const complete = this.password&&this.username&&this.name&&this.phone&&this.address&&this.role&&this.email&&this.confirmPassword\n        return complete;\n    }\n    \n}","import React from 'react';\n/***\n * This class is to be used to simplify rendering of multiple form fields\n * Necessary props are the fields - array of field names, an entity object to hold the attributes\n * showError and onChange functions are also required, the developer should pass a function to give the \n * desired behaviour\n * ***/\nexport default class FormFields extends React.Component{\n    render(){\n        return this.props.fields.map((field,i)=>{\n            return <b key={i}>\n                <br/>\n                <input className=\"form-control\" required type={this.props.type||'text'} name={field} value={this.props.entity[field]||\"\"} placeholder={field} onChange={this.props.onChange}/>\n                <label className= \"errorLabel\">{this.props.showError(field)}</label>\n            </b>\n        })\n    }\n}","import React from 'react';\nexport default class SelectOptions extends React.Component{\n\n    render(){\n        const options = this.props.options.map((option,i)=>{\n            return <option value={option.value} key={i}>\n                {option.label}\n            </option>\n        })\n        return <select placeholder={this.props.placeholder} className={this.props.className} name={this.props.name} value={this.props.entity[this.props.name]||\"\"} onChange={this.props.onChange}>\n            <option value={this.props.defaultValue.value||\"\"} disabled defaultValue>{this.props.defaultValue.label}</option>\n            {options}\n        </select>\n    }\n}","import React from 'react';\nimport Button from \"react-bootstrap/Button\";\nimport './css/signup.css';\nimport User from '../model/User';\nimport FormFields from '../miscelaneous/FormFields';\nimport SelectOptions from '../miscelaneous/SelectOptions'\nconst functions = require('../functions/operations.js');\nconst errorMessages = require('../model/errorMessages.json').signup;\n\nexport default class Signup extends React.Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            isCallingServer: false,\n            failed: false,\n            error: \"\",\n            options: [],\n            called: false,\n            entity: new User(),\n            errors: new Set()\n        };\n        \n        this.handleSignupRequest = this.handleSignupRequest.bind(this);\n        this.handleInputChange = this.handleInputChange.bind(this);\n        this.showError = this.showError.bind(this);\n        this._isMounted = false;\n    }\n\n    componentWillUnmount(){\n        this._isMounted = false;\n    }\n\n    componentDidMount(){\n        this._isMounted = true;\n    }\n    \n    handleSignupRequest(){\n        //mock for now\n        this.setState({isCallingServer:true});\n\n        functions.apiCall('common', 'signup',this.state.entity, 'post').then(response=>{\n            if(response.statusCode===200){\n                this.setState({isCallingServer:false});\n                alert(\"Signup succesful. Please login\");\n                this.props.handleContentChangeRequest('login');\n                }else{\n                    this._isMounted&&this.setState({\n                        isCallingServer:false,\n                        errors: new Set(JSON.parse(response.body).errorDetails.missingFields)\n                    });\n            }\n        })       \n    }\n    showError(field){\n        if(!this.state.errors){\n            return \"\";\n        }\n        if(!this.state.errors.has(field)){\n            return \"\"\n        }else{\n            return errorMessages[field]|| \"\"\n        }\n    }\n\n    showSignupButtonButton(){\n        if(this.state.isCallingServer){\n            return <Button variant={\"secondary\"}>processing</Button>\n        }\n        if(this.state.entity.isComplete()&&(!this.state.isCallingServer)){\n            return <React.Fragment><br></br><Button className=\"btn btn-success form-control\" onClick={this.handleSignupRequest}>Signup</Button></React.Fragment>\n        }\n    }\n\n    handleInputChange(e){\n        e.preventDefault();\n        const name = e.target.name;\n        const value = e.target.value;\n        this.state.entity.setField(e.target.name,e.target.value);\n        this.setState({[name]:value});\n    }\n\n    showFieldsBasedOnRole(){\n        const fields ={\n            COMPANY: ['companyName'],\n        }\n        if(fields[this.state.entity.role]){\n            return   <React.Fragment>\n                    <FormFields showError={this.showError} fields={fields[this.state.entity.role]} entity={this.state.entity} onChange={this.handleInputChange}/>\n            </React.Fragment>\n        }\n        return \"\"\n    }\n \n    showCompanyInput(){\n        if (!this.state.called && (this.state.entity.role==='EMPLOYEE')){\n        functions.apiCall('user', 'getCompanies',null, 'get').then(response=>{\n            if(response.statusCode===200){\n                var arr = [];\n                var i = 0;\n                arr.push(<option key={i} value=\"\"  disabled defaultValue>Choose a Company</option>);\n                for(var key in response.body){\n                    arr.push(<option key={i+1} value={key}>{response.body[key]}</option>);\n                    i++;\n                  }\n                  this._isMounted&& this.setState({options:arr,isCallingServer:false, called:true});\n            }\n        }\n        )\n    }\n    if (this.state.entity.role === 'EMPLOYEE'){\n    return <React.Fragment><br></br>\n        <select className=\"form-control\" name={\"companyUsername\"} value={this.state.entity.companyUsername||\"\"} placeholder=\"role\" onChange={this.handleInputChange}>{this.state.options}</select>      \n        <label className= \"errorLabel\">{this.showError('companyUsername')}</label>\n\n    </React.Fragment>\n    }\n\n    }\n        \n    render(){\n        return (\n            <div className={\"login\"}>\n                <h3 className=\"title\">Please fill out the details below</h3>\n                <div className=\"form-container\">\n                    <SelectOptions\n                        className=\"form-control\"\n                        name=\"role\"\n                        entity={this.state.entity}\n\n                        placeholder=\"Role\"\n                        onChange={this.handleInputChange}\n                        options={[{value:\"USER\",label: \"User\"},{value:\"COMPANY\",label: \"Company\"},{value:\"EMPLOYEE\",label: \"Employee\"}]}\n                        defaultValue={{value: \"\", label: \"Choose a role\"}}\n                    />\n                    <FormFields showError={this.showError} fields={['username', 'name']} entity={this.state.entity} onChange={this.handleInputChange}/>\n                    {this.showFieldsBasedOnRole()}\n                    {this.showCompanyInput()}\n                    <FormFields showError={this.showError} fields={['email']} entity={this.state.entity} onChange={this.handleInputChange}/>\n                    <FormFields showError={this.showError} fields={['phone', 'address']} entity={this.state.entity} onChange={this.handleInputChange}/>\n                    <FormFields showError={this.showError} fields={['password', 'confirmPassword']} type='password' entity={this.state.entity} onChange={this.handleInputChange}/>\n                    {this.showSignupButtonButton()}\n                    <p name=\"login\" className=\"signup_info\" onClick={this.props.handleContentChangeRequest}>Already a member? Login here</p>\n                </div>\n            </div>\n        )\n    }\n}","import React from 'react';\nimport Button from \"react-bootstrap/Button\";\nimport './css/login.css';\nimport Spinner from 'react-bootstrap/Spinner'\nimport { Form } from 'react-bootstrap';\n\nconst {apiCall} = require('../functions/operations')\n\nexport default class Help extends React.Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            isCallingServer: false,\n            failed: false,\n            error: null,\n            name: \"\",\n            email: \"\",\n            serviceName: \"\",\n            message: \"\",\n            sent:false\n        };\n        this.handleReportRequest = this.handleReportRequest.bind(this);\n        this.handleInputChange = this.handleInputChange.bind(this);\n        this._isMounted = false;\n    }\n\n    showSubmitButton(){\n        if(this.state.isCallingServer){\n            return <Button variant={\"secondary\"}><Spinner animation=\"border\" role=\"status\">\n            </Spinner> Submitting...</Button>\n        }\n        if(this.state.name&&this.state.email&&this.state.message&&(!this.state.isCallingServer)){\n            return <Button variant=\"success\" className=\"authenticate_button\" onClick={this.handleReportRequest}>Submit</Button>\n        }\n    }\n\n    componentDidMount(){\n        this._isMounted = true;\n    }\n\n    componentWillUnmount(){\n        this._isMounted = false;\n    }\n\n    handleReportRequest(){\n        localStorage.clear(); //to make sure localStorage is clean whenever we login again\n\n        //mock for now\n        this.setState({isCallingServer:true});\n        const payload = {\n            name:this.state.name,\n            email: this.state.email,\n            serviceName: this.state.serviceName,\n            message: this.state.message\n        }\n        apiCall('common','help',payload, 'post').then(response=>{\n            if(response){\n                if(response.statusCode===200){\n                    this._isMounted&&this.setState({isCallingServer:false, sent:true});\n                }else{\n                    this._isMounted&&this.setState({isCallingServer:false, failed:true,error:response.body})\n                }\n            }else{\n                this._isMounted&&this.setState({isCallingServer:false, failed:true,error:\"No response from the server. Either the server your internet connection is down.\"})\n            }\n        })\n    }\n\n    handleInputChange(e){\n        e.preventDefault();\n        const name = e.target.name;\n        const value = e.target.value;\n        this.setState({[name]:value})\n    }\n\n    showError(){\n        if(this.state.error){\n        return <p className=\"errorInfo\">{this.state.error||\"Could not post error!\"}</p>\n        }else{\n            return <p></p>\n        }\n    }\n\n    render(){\n\n        if(this.state.sent){\n            return (\n                <div className=\"login_outter\">\n                    <div className={\"login\"}>\n                    <h3 className=\"title\">Report an Issue</h3>\n                    <div className=\"form-container\">\n                        <p>Your report was sent. Thank you.</p>\n                    </div>\n                </div>\n                </div>\n            )\n        }else{\n            return (\n                <div className=\"login_outter\">\n                    <div className={\"login\"}>\n                    <h3 className=\"title\">Report an Issue</h3>\n                    <div className=\"form-container\">\n                        <br></br>\n                        <div>This form is used to report any issues related to site functionality</div>\n                        <br></br>\n                        <div>Queries relating to providers and booking information should be directed to the specific provider</div>\n                        <br></br>\n                        <input type=\"text\" name={\"name\"} value={this.state.name} placeholder=\"Name\" className=\"form-control\" onChange={this.handleInputChange}/>\n                        <br></br>\n                        <input type=\"text\" name={\"email\"} value={this.state.email} className=\"form-control\" placeholder=\"Email\" onChange={this.handleInputChange}/>\n                        <br></br>\n                        <input type=\"text\" name={\"serviceName\"} value={this.state.serviceName} className=\"form-control\" placeholder=\"Service (If applicable)\" onChange={this.handleInputChange}/>\n                        <br></br>\n                        <textarea rows=\"4\" cols=\"50\" name={\"message\"} value={this.state.message} className=\"form-control\" placeholder=\"Message\" onChange={this.handleInputChange}/>\n    \n                        {this.showError()}\n                        {this.showSubmitButton()}\n                    </div>\n                </div>\n                </div>\n            )\n        }\n\n    }\n}\n","import Entity from './Entity'\nexport default class Employee extends Entity{\n    getBookings(bookings){\n        if(!bookings){return []}\n        return bookings.filter(booking=>{return booking.employee.id === this.id})\n    }\n\n}","import Entity from './Entity';\nimport Employee from './Employee'\nexport default class Provider extends Entity{\n    constructor(data){\n        super(data);\n        if(data.employees){\n            this.employees = data.employees.map(employee=>{return new Employee(employee)});\n        }\n    }\n\n    formattedProvider(){\n        let data = JSON.parse(JSON.stringify(this));\n        if(data.employees.length===1){\n            data.employees = data.employees[0].name\n        }else if(data.employees.length>1){\n            let string = \"\"\n            for(let i = 0; i<data.employees.length-1;i++){\n                string = string + data.employees[i].name+\", \"\n            }\n            string = string + data.employees[data.employees.length-1].name;\n            data.employees = string;\n        }else{\n            data.employees = \"No employees registered\";\n        }\n        return data;\n    }\n}","import React from 'react';\nimport './upcomingevent.css';\nimport Spinner from 'react-bootstrap/Spinner';\nimport Prodiver from '../../model/Provider';\nimport filterFactory, { textFilter, Comparator } from 'react-bootstrap-table2-filter';\nimport BootstrapTable from 'react-bootstrap-table-next';\nconst {apiCall} = require('../../functions/operations');\nexport default class ViewProviders extends React.Component{\n    constructor(props){\n        super(props)\n        this.state = {\n            called: false,\n            showModal: false,\n        }\n        this._isMounted = false;\n        this.closeModal = this.closeModal.bind(this);\n    }\n    closeModal(e){\n        e.preventDefault();\n        this.setState({showModal: false});\n    }\n    componentWillUnmount(){\n        this._isMounted = false;\n    }\n    componentDidMount(){\n        this._isMounted = true;\n        //only call api if necessary\n        const companies = localStorage.getItem('user_companies') ? JSON.parse(localStorage.getItem('user_companies')) : [];\n        if(companies&&companies.length){\n            this.setState({providers:companies, failed: false, called: true})\n        }else{\n            apiCall('user', 'companies',null,'get').then(r=>{\n                if(r.statusCode===200){\n                    this._isMounted&&this.setState({providers:r.body, failed: false, called: true});\n                }else{\n                    this._isMounted&&this.setState({failed: true, called: true})\n                }\n            });\n        }\n\n    }\n\n\n\n    render(){\n        if(!this.state.called){\n        return <div className=\"calling\">\n            <div className=\"spinnerOutter\">\n            <Spinner animation=\"border\" role=\"status\">\n                <span className=\"sr-only\">Loading...</span>\n            </Spinner>\n            </div>\n            <br/>\n            <p>Please wait while we retrieve the available providers.</p>\n\n        </div>\n    }else{\n        if(this.state.failed){\n            return <div>Ooops. Something went wrong, we could not retrieve the available providers</div>\n        }else{\n\n            const columns = [{\n                dataField: 'id',\n                text: 'id'\n              }, {\n                dataField: 'name',\n                text: 'Company',\n                filter: textFilter({\n                  comparator: Comparator.LIKE\n                })\n              },  {\n                dataField: 'phone',\n                text: 'Phone',\n                filter: textFilter({\n                  comparator: Comparator.LIKE\n                })\n              },{\n                dataField: 'address',\n                text: 'Address',\n                filter: textFilter({\n                    comparator: Comparator.LIKE\n                  })\n              }, {\n                dataField: 'employees',\n                text: 'Employees',\n                filter: textFilter({\n                    comparator: Comparator.LIKE\n                  })\n              }\n            ];\n            const rows = this.state.providers.map(provider=>{\n                return new Prodiver(provider).formattedProvider()\n            });\n            return (\n                <div>\n                    <h3>Providers Using Our System</h3>\n                    <div className=\"upcoming_appointments_table\" >\n                            <BootstrapTable keyField='id' data={ rows } columns={ columns } filter={ filterFactory() } />\n                    </div>\n                </div>\n            )\n        }\n    }\n\n\n}\n}\n","import React from 'react';\nimport Navbar from \"../../../node_modules/react-bootstrap/Navbar\";\nimport Nav from \"../../../node_modules/react-bootstrap/Nav\";\nimport NavDropdown from \"../../../node_modules/react-bootstrap/NavDropdown\";\nimport '../css/navigationbar.css'\nimport { IoIosLogOut } from \"react-icons/io\";\nimport { IconContext } from \"react-icons\";\nimport {getDecodedJwtFromLocalStorage}  from \"../../functions/utils\";//Add decode func\n\n/***\n * This class should handle the Navigation bar so that the appropriate menu's are displayed\n * ****/\nexport default class ProviderNavigationBar extends React.Component{\n\n    render(){\n        const decodedJwtPayload = getDecodedJwtFromLocalStorage();\n\n        const logoutButton = ()=>{\n            if(decodedJwtPayload&&(decodedJwtPayload.exp>decodedJwtPayload.iat)){\n                return <IconContext.Provider value={{ color: 'white', size: '40px' }}>\n                  <div>\n                    <IoIosLogOut className=\"logout\" onClick={this.props.handleLogout}/>\n                  </div>\n                </IconContext.Provider>\n            }\n        }\n        return (\n            <Navbar className=\"userNavbar\">\n                    <Navbar.Brand href=\"#home\">AGME</Navbar.Brand>\n                    <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n                    <Navbar.Collapse id=\"basic-navbar-nav\">\n                        <Nav className=\"mr-auto\">\n                            <Nav.Link href=\"#home\">Home</Nav.Link>\n                            <Nav.Link href=\"#link\">Link</Nav.Link>\n                            <NavDropdown title=\"Services\" id=\"basic-nav-dropdown\">\n                                <NavDropdown.Item name=\"providers\" onClick={this.props.handleSelectNavBar}>Providers</NavDropdown.Item>\n                                <NavDropdown.Item href=\"#action/3.2\">Another action</NavDropdown.Item>\n                                <NavDropdown.Item href=\"#action/3.3\">Something</NavDropdown.Item>\n                                <NavDropdown.Divider />\n                                <NavDropdown.Item href=\"#action/3.4\">Separated link</NavDropdown.Item>\n                            </NavDropdown>\n                            <Nav.Link name=\"help\" onClick={this.props.handleSelectNavBar}>Help/Report</Nav.Link>\n                        </Nav>\n\n                    </Navbar.Collapse>\n                    {logoutButton()}\n                </Navbar>\n        )\n    }\n}\n","import React from 'react';\nimport './upcomingevent.css';\nimport Spinner from 'react-bootstrap/Spinner';\nimport { BsTrash } from \"react-icons/bs\"; \nimport Button from \"react-bootstrap/Button\";\nimport Modal from 'react-bootstrap/Modal';\nimport Booking from '../../model/Booking';\nimport BootstrapTable from 'react-bootstrap-table-next';\nimport filterFactory, { textFilter, Comparator } from 'react-bootstrap-table2-filter';\nconst {apiCall} = require('../../functions/operations');\nexport default class UpcomingAppointments extends React.Component{\n    \n    constructor(props){\n        super(props);\n        this.state = {\n            called: false,\n            showModal: false,\n            isDeletingBooking: false,\n            deleted: false,\n            deletedFailed:false\n        }\n        this.closeModal = this.closeModal.bind(this);\n        this.handleDeleteClick = this.handleDeleteClick.bind(this);\n        this._isMounted = false;\n    }\n\n    componentWillUnmount(){\n        this._isMounted = false;\n    }\n\n    closeModal(e){\n        e.preventDefault();\n        this.setState({showModal: false});\n    }\n\n    //Should open a modal to confirm deletion\n    handleDeleteClick(e){\n        e.preventDefault();\n        this.setState({isDeletingBooking:true});\n        const bookingId = this.state.booking.id;\n        apiCall('user', 'deleteBooking', bookingId, 'DELETE').then(response=>{\n            if(RegExp('^2[0-9]{2}$').test(response.statusCode)){\n                //delete appointment\n                const appointments = this.state.appointments.filter(a=>{\n                    return a.id!==this.state.booking.id\n                })\n                this.setState({\n                    appointments: appointments,\n                    isDeletingBooking:false,\n                    deleted: true,\n                    deletedFailed: false,\n                    showModal:false\n                })\n            }else{\n                this.setState({\n                    isDeletingBooking:false,\n                    deleted: false,\n                    deletedFailed: true,\n                    shoModal:false\n                })\n            }\n        })\n    }\n\n    componentDidMount(){\n        this._isMounted = true;\n        const bookings = localStorage.getItem('user_bookings') ? JSON.parse(localStorage.getItem('user_bookings')) : [];\n        if(bookings&&bookings.length){\n            this.setState({appointments:JSON.parse(localStorage.getItem('user_bookings')), failed: false, called: true})\n        }else{\n            apiCall('user', 'getBookings',null,'get').then(r=>{\n                if(r.statusCode===200){\n                    this._isMounted&&this.setState({appointments:r.body, failed: false, called: true})\n                }else{\n                    this._isMounted&&this.setState({failed: true, called: true})\n                }\n            });\n        }\n\n    }\n\n    modal(){\n        //to make sure modal does not show up if boking is not set\n        if(this.state.booking&&this.state.showModal){\n            if(this.state.isDeletingBooking){\n                return (\n                    <Modal show={this.state.showModal}>\n                            <Modal.Dialog>\n                                <Modal.Header>\n                                    <Modal.Title>Cancelling...</Modal.Title>\n                                </Modal.Header>\n            \n                                <Modal.Body>\n                                    <p> Please wait while we cancel your appointment</p>\n                                </Modal.Body>\n                            </Modal.Dialog>\n                            </Modal>\n                );\n            }else{\n                //not currently deleting a booking\n                if(this.deleted){\n                    return (\n                        <Modal show={this.state.showModal}>\n                            <Modal.Dialog>\n                                <Modal.Header>\n                                    <Modal.Title>Appointment was canceled</Modal.Title>\n                                </Modal.Header>\n            \n                                <Modal.Body>\n                                    <p> Your appointment was cancelled.</p>\n                                </Modal.Body>\n            \n                                <Modal.Footer>\n                                    <Button variant=\"secondary\" onClick={e=>{\n                                        e.preventDefault();\n                                        this.setState({showModal:false})\n                                    }}>Cancel</Button>\n                                </Modal.Footer>\n                            </Modal.Dialog>\n                        </Modal>\n                    );\n                }else{\n                    /**\n                     * 2 scenarios in this block. \n                     * Scenario A: A previous deletion failed\n                     * Scenario B: No deletion was attempted yet\n                     * **/\n                    if(this.state.deletedFailed){\n                        return <Modal show={this.state.showModal}>\n                            <Modal.Dialog>\n                                <Modal.Header>\n                                    <Modal.Title>Cancelation failed</Modal.Title>\n                                </Modal.Header>\n            \n                                <Modal.Body>\n                                    <p>\n                                        Unfortunately we could not cancel your appointment with {this.state.booking.employee.name} scheduled to start at {this.state.booking.getDateString()} at this time?                                </p>\n                                </Modal.Body>\n            \n                                <Modal.Footer>\n                                <Button variant=\"secondary\" onClick={e=>{\n                                        e.preventDefault();\n                                        this.setState({showModal:false})\n                                    }}>Cancel</Button>                                \n                                    </Modal.Footer>\n                            </Modal.Dialog>\n                            </Modal>\n                    }else{\n                        return (\n                            <Modal show={this.state.showModal}>\n                            <Modal.Dialog>\n                                <Modal.Header>\n                                    <Modal.Title>Confirm cancelation</Modal.Title>\n                                </Modal.Header>\n            \n                                <Modal.Body>\n                                    <p>\n                                        Are you sure you want to cancel your booking with {this.state.booking.employee.name} scheduled to start at {this.state.booking.getDateString()}?                                </p>\n                                </Modal.Body>\n            \n                                <Modal.Footer>\n                                    <Button variant=\"secondary\" onClick={e=>{\n                                        e.preventDefault();\n                                        this.setState({showModal:false})\n                                    }}>Cancel</Button>\n                                    <Button variant=\"danger\" onClick={this.handleDeleteClick}>Go ahead</Button>\n                                </Modal.Footer>\n                            </Modal.Dialog>\n                            </Modal>\n                        );\n                    }\n                }\n            }\n\n        }\n    }\n\n    render(){\n        if(!this.state.called){\n            return <div className=\"calling\">\n                <div className=\"spinnerOutter\">\n                <Spinner animation=\"border\" role=\"status\">\n                    <span className=\"sr-only\">Loading...</span>\n                </Spinner>\n                </div>\n                <br/>\n                <p>Please wait while we retrieve your bookings.</p>\n            </div>\n        }else{\n            if(this.state.failed){\n                return <div>Ooops. Something went wrong, we could not retrieve your bookings</div>\n            }else{\n                const data = this.state.appointments.map(appointment=>{\n                    const booking = new Booking(appointment)\n                    const action = booking.isOldBooking() ? \"\" :<Button variant=\"danger\" onClick={e=>{\n                        e.preventDefault();\n                        this.setState({booking:booking,showModal:true})\n                    }}>\n                        <BsTrash/> </Button>\n                    return {\n                        id: appointment.id,\n                        startDateTime: appointment.startDateTime,\n                        duration: appointment.duration,\n                        service: appointment.serviceType.name,\n                        companyName:appointment.company.name,\n                        contactNumber: appointment.company.phone,\n                        workerName: appointment.employee.name,\n                        action: action\n\n                    }\n                })\n                //table build\n                const columns = [{\n                    dataField: 'id',\n                    text: 'Booking id'\n                  }, {\n                    dataField: 'startDateTime',\n                    text: 'Date / Time',\n                    filter: textFilter({\n                      comparator: Comparator.LIKE\n                    })\n                  },  {\n                    dataField: 'duration',\n                    text: 'Duration (h)',\n                    filter: textFilter({\n                      comparator: Comparator.LIKE\n                    })\n                  },{\n                    dataField: 'service',\n                    text: 'Service',\n                    filter: textFilter()\n                  }, {\n                    dataField: 'companyName',\n                    text: 'Company',\n                    filter: textFilter()\n                  }, {\n                    dataField: 'contactNumber',\n                    text: 'Telephone',\n                    filter: textFilter()\n                  }, {\n                    dataField: 'workerName',\n                    text: 'Provider name',\n                    filter: textFilter()\n                  }, {\n                    dataField: 'action',\n                    text: 'Action',\n                  }\n                ];\n                  \n                return (\n                    <div>\n                        {this.modal()}\n                        <div className=\"upcoming_appointments_table\" >\n                            <BootstrapTable keyField='id' data={ data } columns={ columns } filter={ filterFactory() } />\n                        </div>\n                    </div>\n                )\n            }\n        }\n    }\n}","import React from 'react';\nimport BootstrapTable from 'react-bootstrap-table-next';\nimport filterFactory, { textFilter, Comparator } from 'react-bootstrap-table2-filter';\nimport './services.css';\nimport Spinner from 'react-bootstrap/Spinner';\nimport {getDecodedJwtFromLocalStorage}  from \"../../functions/utils\";//Add decode func\nconst {apiCall} = require('../../functions/operations');\n//To view list of services\nexport default class AgmeServices extends React.Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            services : this.props.filterByUsername ? localStorage.getItem(\"company_services\")&&JSON.parse(localStorage.getItem(\"company_services\")) : localStorage.getItem(\"agme_all_services\")&&JSON.parse(localStorage.getItem(\"agme_all_services\")),\n            done: false\n        }\n        this._isMounted = false;\n    }\n\n    componentDidMount(){\n        this._isMounted = true;\n        //try again if localStorage does not work\n        if(!this.state.services){\n            apiCall('company', 'getAllServices','','GET').then(response=>{\n                const username = getDecodedJwtFromLocalStorage()&&getDecodedJwtFromLocalStorage().sub;\n                if(response.statusCode === 200){\n                    let services = response.body;\n                    if(this.props.filterByUsername){\n                        services = services.filter(service=>{\n                            return service.company.filter(company=>{return company.username===username}).length>0\n                        })\n                    }\n                    this._isMounted &&this.setState({\n                        done:true,\n                        services: services\n                    })\n                }else{\n                    this._isMounted &&this.setState({\n                        done:true,\n                        services: null\n                    })\n                }\n            });\n        }\n        \n    }\n\n    componentWillUnmount(){\n        this._isMounted = false;\n    }\n\n    render(){\n        if(this.state.services&&this.state.services.length){\n            const rows = this.state.services.map(service=>{return {name:service.name,description:service.description}})\n            const columns = [{\n                dataField: 'name',\n                text: 'Service',\n                filter: textFilter({\n                  comparator: Comparator.LIKE\n                })\n              }, {\n                dataField: 'description',\n                text: 'Description',\n                filter: textFilter({\n                  comparator: Comparator.LIKE\n                })\n              }\n            ];\n            return (\n                <div className=\"upcoming_appointments_table\" >\n                    <BootstrapTable keyField='id' data={ rows } columns={ columns } filter={ filterFactory() } />\n                </div>\n            );\n        }else{\n            if(this.state.done){\n                return \"No services available\"\n            }else{\n                return (\n                    <div className=\"spinnerOutter\">\n                        <Spinner animation=\"border\" role=\"status\">\n                            <span className=\"sr-only\">Loading services...</span>\n                        </Spinner>\n                    </div>\n                    );\n            }\n        }\n    }\n}\n","import React from 'react';\nimport AgmeServices from '../company/AgmeServices'\nconst {apiCall} = require('../../functions/operations');\n/***\n * Component for user to view available services. It might look dupplicate from the\n * AgmeServices component, but this is to be used when user is authenticated as \n * USER, so we may need to add new features for next release, thus it makes sense\n * to separate components.\n * **/\nexport default class UserServices extends React.Component{\n    constructor(props){\n        super(props)\n        this.state = {services: []}\n        this._isMounted = false;\n    }\n\n    componentWillUnmount(){\n        this._idMounted = false;\n    }\n\n    componentDidMount(){\n        this._isMounted = true;\n        //check for localStorage before making this call\n        const services = localStorage.getItem('user_services') ? JSON.parse(localStorage.getItem('user_services')) : [];\n        if(services&&services.length){\n            this.setState({\n                services: services\n            })\n        }else{\n            apiCall('user', 'getAllServices',null,'get').then(response=>{\n                if(response.statusCode === 200){\n                    this._idMounted &&this.setState({\n                        services: response.body\n                    })\n                }\n            })\n        }\n\n    }\n\n    render(){\n        return (\n            <div>\n                <h5>These are all services registed in AGME</h5>\n                <AgmeServices/>\n            </div>\n        )\n    }\n}","import React from 'react';\nimport UpcomingAppointments from './UpcomingAppointments';\nimport UserServices from './UserServices';\nimport ViewProviders from './ViewProviders';\nimport UserNewAppointment from './UserNewAppointment';\n\n/**\n * A simple component to map to other components - avoid use of switch statements\n * **/\nexport default class ComponentsHandler extends React.Component{\n    render(){\n        const mapper = {\n            userNewAppointment: <UserNewAppointment/>,\n            upcomingAppointments: <UpcomingAppointments/>,\n            userServices: <UserServices/>,\n            viewProviders: <ViewProviders/>\n        }\n        return mapper[this.props.component]||\"\"\n    }\n}","import React from 'react';\nimport Navbar from \"../../../node_modules/react-bootstrap/Navbar\";\nimport Nav from \"../../../node_modules/react-bootstrap/Nav\";\nimport NavDropdown from \"../../../node_modules/react-bootstrap/NavDropdown\";\nimport '../css/navigationbar.css'\nimport { IoIosLogOut } from \"react-icons/io\";\nimport { IconContext } from \"react-icons\";\nimport {FaUser} from \"react-icons/fa\";\nimport {getDecodedJwtFromLocalStorage}  from \"../../functions/utils\";//Add decode func\nimport ComponentsHandler from './ComponentsHandler';\n/***\n * This class should handle the Navigation bar so that the appropriate menu's are displayed\n * ****/\nexport default class UserNavigationBar extends React.Component{\n    constructor(props){\n        super(props);\n        this.handleSelectNavBar = this.handleSelectNavBar.bind(this);\n    }\n\n    handleSelectNavBar(e){\n        e.preventDefault();\n        this.props.handleSelectNavBar(<ComponentsHandler component={e.target.name}/>, true);\n    }\n\n    render(){\n        const decodedJwtPayload = getDecodedJwtFromLocalStorage();\n        const expired = (decodedJwtPayload.exp - new Date().getTime()/1000)  < 0\n        const logoutButton = ()=>{\n            if(!expired){\n                return <IconContext.Provider value={{ color: 'white', size: '40px' }}>\n                  <div>\n                    <IoIosLogOut className=\"logout\" onClick={this.props.handleLogout}/>\n                  </div>\n                </IconContext.Provider>\n            }\n        }\n        return (\n            <Navbar className=\"userNavbar\">\n                    <Navbar.Brand className=\"brand\">AGME</Navbar.Brand>\n                    <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n                    <Navbar.Collapse id=\"basic-navbar-nav\">\n                        <Nav className=\"mr-auto\">\n                        <NavDropdown.Item name=\"userNewAppointment\" className=\"userName\" onClick={this.handleSelectNavBar}><FaUser/>{decodedJwtPayload.sub}</NavDropdown.Item>\n                            <NavDropdown title=\"Services\" id=\"basic-nav-dropdown\">\n                                <NavDropdown.Item name=\"viewProviders\" onClick={this.handleSelectNavBar}>Providers</NavDropdown.Item>\n                                <NavDropdown.Divider />\n                                <NavDropdown.Item name=\"userServices\" onClick={this.handleSelectNavBar}>View Services</NavDropdown.Item>\n                            </NavDropdown>\n                            <NavDropdown title=\"My Appointments\" id=\"basic-nav-dropdown\">\n                                <NavDropdown.Item name=\"userNewAppointment\" onClick={this.handleSelectNavBar}>New appointment</NavDropdown.Item>\n                                <NavDropdown.Item name=\"upcomingAppointments\" onClick={this.handleSelectNavBar}>Manage my appointments (view/delete)</NavDropdown.Item>\n                            </NavDropdown>\n\n                        </Nav>\n                        <Nav.Link name=\"help\" onClick={this.props.handleSelectNavBar}>Help/Report</Nav.Link>\n                    </Navbar.Collapse>\n                    {logoutButton()}\n                </Navbar>\n        )\n    }\n}\n","import React from 'react';\nimport Navbar from \"../../../node_modules/react-bootstrap/Navbar\";\nimport Nav from \"../../../node_modules/react-bootstrap/Nav\";\nimport NavDropdown from \"../../../node_modules/react-bootstrap/NavDropdown\";\nimport '../css/navigationbar.css'\nimport { IoIosLogOut } from \"react-icons/io\";\nimport { IconContext } from \"react-icons\";\nimport {getDecodedJwtFromLocalStorage}  from \"../../functions/utils\";//Add decode func\n\n/***\n * This class should handle the Navigation bar so that the appropriate menu's are displayed\n * ****/\nexport default class AdminNavigationBar extends React.Component{\n\n    render(){\n        const decodedJwtPayload = getDecodedJwtFromLocalStorage();\n\n        const logoutButton = ()=>{\n            if(decodedJwtPayload&&(decodedJwtPayload.exp>decodedJwtPayload.iat)){\n                return <IconContext.Provider value={{ color: 'white', size: '40px' }}>\n                  <div>\n                    <IoIosLogOut className=\"logout\" onClick={this.props.handleLogout}/>\n                  </div>\n                </IconContext.Provider>\n            }\n        }\n        return (\n            <Navbar bg=\"light\" expand=\"lg\">\n                    <Navbar.Brand href=\"#home\">AGME</Navbar.Brand>\n                    <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n                    <Navbar.Collapse id=\"basic-navbar-nav\">\n                        <Nav className=\"mr-auto\">\n                            <Nav.Link href=\"#home\">Home</Nav.Link>\n                            <Nav.Link href=\"#link\">Link</Nav.Link>\n                            <NavDropdown title=\"Services\" id=\"basic-nav-dropdown\">\n                                <NavDropdown.Item name=\"providers\" onClick={this.props.handleSelectNavBar}>Providers</NavDropdown.Item>\n                                <NavDropdown.Item href=\"#action/3.2\">Another action</NavDropdown.Item>\n                                <NavDropdown.Item href=\"#action/3.3\">Something</NavDropdown.Item>\n                                <NavDropdown.Divider />\n                                <NavDropdown.Item href=\"#action/3.4\">Separated link</NavDropdown.Item>\n                            </NavDropdown>\n                            <Nav.Link name=\"help\" onClick={this.props.handleSelectNavBar}>Help/Report</Nav.Link>\n                        </Nav>\n\n                    </Navbar.Collapse>\n                    {logoutButton()}\n                </Navbar>\n        )\n    }\n}\n","import React from 'react';\nimport Navbar from \"../../../node_modules/react-bootstrap/Navbar\";\nimport Nav from \"../../../node_modules/react-bootstrap/Nav\";\nimport NavDropdown from \"../../../node_modules/react-bootstrap/NavDropdown\";\nimport '../css/navigationbar.css'\n/***\n * This class should handle the Navigation bar so that the appropriate menu's are displayed\n * ****/\nexport default class VisitorNavigationBar extends React.Component{\n\n    render(){\n        return (\n            <Navbar className=\"userNavbar\">\n                    <Navbar.Brand className=\"brand\">AGME</Navbar.Brand>\n                    <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n                    <Navbar.Collapse id=\"basic-navbar-nav\">\n                        <Nav className=\"mr-auto\">\n                            <Nav.Link className=\"userNavbar\">Home</Nav.Link>\n                            <Nav.Link name=\"login\" onClick={this.props.handleSelectNavBar}>Login</Nav.Link>\n                            <Nav.Link name=\"help\" onClick={this.props.handleSelectNavBar}>Help/Report</Nav.Link>\n                        </Nav>\n\n                    </Navbar.Collapse>\n                </Navbar>\n        )\n    }\n}","import React from 'react';\nimport './services.css'\nimport AgmeServices from './AgmeServices';\n\n//To view list of services\nexport class CompanyServices extends React.Component{\n    render(){\n        return (\n            <div>\n                <h4>My services</h4>\n                <AgmeServices filterByUsername={true}/>\n            </div>\n        )\n    }\n}\n","import React from 'react';\nimport Button from \"react-bootstrap/Button\";\nimport './services.css'\nimport Entity from '../../model/Entity';\nimport '../css/provider.css';\nimport Spinner from 'react-bootstrap/Spinner';\nconst {apiCall, getDecodedJwtFromLocalStorage} = require('../../functions/operations');\n//To view list of services\nexport default class AddExistingService extends React.Component{\n    constructor(props){\n        super(props)\n        this.state = {\n            allServices: localStorage.getItem(\"agme_all_services\") ? JSON.parse(localStorage.getItem(\"agme_all_services\")) : [],\n            companyServices:localStorage.getItem(\"company_services\") ? JSON.parse(localStorage.getItem(\"company_services\")) : [],\n            available:localStorage.getItem(\"company_available_services\") ? JSON.parse(localStorage.getItem(\"company_available_services\")) : [],\n            serviceName: \"\",\n            isCallingServer: false,\n            failed: false,\n            error: null,\n            description: \"\",\n            name: \"\",\n            entity: new Entity()\n        }\n        this._isMounted = false;\n        this.handleInputChange = this.handleInputChange.bind(this);\n        this.addNewSubmit = this.addNewSubmit.bind(this);\n    }\n    addNewSubmit(e){\n        e&&e.preventDefault();\n        if (!this.state.isCallingServer){\n            this.setState({isCallingServer:true})\n            this.state.entity.setField(\"name\",this.state.name);\n            this.state.entity.setField(\"description\",this.state.description);\n            apiCall('company', 'newService' , this.state.entity ,'post').then(r=>{\n                if(r.statusCode === 200){\n                    //update localStorage\n                    let allServices = this.state.allServices;\n                    let companyServices = this.state.companyServices;\n                    let availableServices = this.state.available.filter(s=>{return s.name!==r.body.name});\n                    allServices.push(r.body);\n                    companyServices.push(r.body);\n                    localStorage.setItem(\"agme_all_services\",JSON.stringify(allServices))\n                    localStorage.setItem(\"company_services\",JSON.stringify(companyServices));\n                    localStorage.setItem(\"company_available_services\",JSON.stringify(availableServices));\n\n                    this._isMounted&&this.setState({\n                        allServices:allServices,\n                        companyServices:companyServices,\n                        available:availableServices,\n                        isCallingServer: false\n                    })\n                }else{\n                    this._isMounted&&this.setState({\n                        isCallingServer: false\n                    })\n                }\n\n            })\n        }\n    }\n\n    componentWillUnmount(){\n        this._isMounted = false;\n    }\n    componentDidMount(){\n        this._isMounted = true;\n        //just in case localStorage is empty\n        if(!this.state.allServices || (this.state.allServices.length===0)){\n            apiCall('company','getAllServices', null, 'GET').then(response=>{\n                const username = getDecodedJwtFromLocalStorage().sub;\n                if(response.statusCode === 200){\n                    let all = new Set();\n                    let company = new Set();\n                    const companyServices = response.body.filter(service=>{\n                        all.add(service.name);\n                        const hasService = service.company.filter(company=>{return company.username===username}).length>0;\n                        if(hasService){\n                            company.add(service.name)\n                        }\n                        return hasService;\n                    });\n                    const available = response.body.filter(c=>{\n                        return !company.has(c.name)\n                    })\n    \n                    this._isMounted&&this.setState({\n                        allServices: response.body,\n                        companyServices: companyServices,\n                        available: available\n                    });\n                }\n            })\n        }    \n    }\n\n    handleInputChange(e){\n        e.preventDefault();\n        const name = e.target.name;\n        const value = e.target.value;\n        this.setState({[name]:value});\n    }\n\n    showInputFields(){\n        const isExisting = this.state.available.filter(service=>{return service.name===this.state.name}).length>0;\n        if(isExisting){\n            return <div>\n                <Button\n                    onClick={e=>{\n                        e.preventDefault();\n                        this.setState({\n                            name:null,\n                            description: null\n                        });\n                    }}\n                >\n                    Type new\n                    </Button>\n            </div>\n        }else{\n            return (\n                <div>\n                    <input type=\"text\" name={\"name\"} value={this.state.name} placeholder=\"name\" className=\"form-control\" onChange={this.handleInputChange}/>\n                    <br/>\n                    <input type=\"text\" name={\"description\"} value={this.state.description} className=\"form-control\" placeholder=\"description\" onChange={this.handleInputChange}/>\n                    <br/>\n                </div>\n            );\n        }\n    }\n\n    render(){\n        if(this.state.isCallingServer){\n            return (\n                <div className=\"newService\">\n                    <div className=\"calling\">\n                    <div className=\"spinnerOutter\">\n                    <Spinner animation=\"border\" role=\"status\">\n                        <span className=\"sr-only\"/>\n                    </Spinner>\n                    </div>\n                    <br/>\n                    <p>Please wait while we add {this.state.name}  to your company.</p>\n                    </div>\n                </div>\n\n            \n            );\n        }\n\n        if(this.state.available&&(this.state.available.length>0)){\n            const options = this.state.available.map((option,i)=>{\n            return <option key={i} value={option.name}>{option.name}</option>\n            });\n            let button;\n            let message = \"\"\n            const isDuplicate = this.state.companyServices.filter(s=>{return s.name===this.state.name}).length>0;\n            if(this.state.name){\n                //check if not duplicate\n                const isDuplicate = this.state.companyServices.filter(s=>{return s.name===this.state.name}).length>0;\n                if(!isDuplicate){\n                    button = <Button onClick={this.addNewSubmit} variant=\"success\">Add</Button>\n                    message = \"\"\n                }else{\n                    message = \"Cannot add service \"+this.state.name+\". You already provide it\"\n                }\n            }else{\n                button = <Button variant=\"secondary\">Add</Button>\n            }\n            return (\n                <React.Fragment>\n                <div className=\"newService\">\n                <h1>Add a new service</h1>\n                <br/><br/>\n                <p>Select an existing service or add a new one</p>\n                    <select name=\"name\" onChange={this.handleInputChange} defaultValue=\"DEFAULT\">\n                            <option value=\"DEFAULT\" disabled>Choose a service</option>\n                            {options}\n                    </select>\n                    {this.showInputFields()}\n                    <br/>\n                    <div className={\"duplicate \"+isDuplicate}>{message}</div>\n                    {button}\n                </div>\n                </React.Fragment>\n            );\n        }\n        return (\n            <div className=\"newService\">\n                <h1>Add a new service</h1>\n                <br/><br/>\n                <input type=\"text\" name={\"name\"} value={this.state.name} placeholder=\"name\" className=\"form-control\" onChange={this.handleInputChange}/>\n                <br/>\n                <input type=\"text\" name={\"description\"} value={this.state.description} className=\"form-control\" placeholder=\"description\" onChange={this.handleInputChange}/>\n                <br/>\n                <button onClick={this.addNewSubmit}>add new</button>\n            </div>\n        )\n    }\n}\n","import React from 'react';\nimport Button from \"react-bootstrap/Button\";\nimport { BsTrash } from \"react-icons/bs\"; \nimport './availability.css';\nexport class EmployeeAvailability extends React.Component{\n\n    constructor(props){\n        super(props);\n        //simply to force re-rendering when changing a booking\n        this.state={\n            updateCounter: 0\n        }\n    }\n    findBookingByTime(time){\n        try{\n            return this.props.bookings.filter(booking=>{\n                const bookingTime = booking.startDateTime.split(\" \")[1].split(\":00:\")[0]\n                return (booking.startDateTime.includes(this.props.date))&&(Number(bookingTime)===Number(time))\n            })[0]\n        }catch(e){\n            return null\n        }\n    }\n\n    render(){\n        const times = [8,9,10,11,12,13,14,15,16,17];\n        let availableTimes = new Set(times);\n        Array.from(this.props.times).forEach(time=>{availableTimes.delete(time)})\n        const availabilityComponent = times.map((time,i)=>{\n        const booking = this.findBookingByTime(time)&&(\n            <span className=\"delete_info\">\n                Delete Booking id: \n                {this.findBookingByTime(time).id}\n                <Button value={(this.findBookingByTime(time).id)} className=\"button_info\" variant=\"secondary\" onClick={this.props.deleteBooking}><BsTrash/></Button>\n            </span>); \n            let button = null;\n            let action = null;\n            if(availableTimes.has(time)){\n                button = <Button variant=\"success\">Available</Button>\n            }else{\n                button = <Button variant=\"secondary\">Unvailable</Button>\n                action = <Button value={(this.findBookingByTime(time).id)} variant=\"secondary\" className=\"schedule_delete_button\" onClick={this.props.deleteBooking}><BsTrash/></Button>\n            }\n            return <div className=\"hour\" key={i}>\n                <span className=\"label\">{time}</span>\n                {button}{action}{booking}\n            </div>\n        })\n        return <div className=\"employee_availability\">\n            <p>\n                Click on <Button className=\"button_info\" variant=\"secondary\"><BsTrash/></Button>\n                to delete a booked time slot\n            </p>\n            \n           {availabilityComponent}\n       </div>\n    }\n}","import React from 'react';\nimport {EmployeeAvailability} from './EmployeeAvailability';\n\nexport class EmployeeSchedule extends React.Component{\n    constructor(props){\n        super(props);\n        this.handleSelectDate = this.handleSelectDate.bind(this)\n        this.state = {\n            date: \"\"\n        }\n    }\n\n    handleSelectDate(e){\n        e.preventDefault();\n        const value = e.target.value.split(\"-\");\n        this.setState({date: `${value[2]}-${value[1]}-${value[0]}`});\n    }\n\n    render(){\n        if(this.props.employee.id){\n            const bookings = this.props.employee.getBookings(this.props.bookings);\n            const bookingsDictionary = {}\n            bookings.forEach(booking=>{\n                let date = booking.startDateTime.split(\" \")[0].slice(0,8);\n                if(!bookingsDictionary[date]){\n                    bookingsDictionary[date] = {\n                        times: new Set()\n                    }\n                }\n                const time = (booking.startDateTime.split(\" \")[1].split(\":00:\")[0])\n                bookingsDictionary[date].times.add(time)\n            });\n            const times = bookingsDictionary[this.state.date.slice(0,8)] ? (bookingsDictionary[this.state.date.slice(0,8)].times) : new Set();\n            const availabilityComponent = this.state.date ? <EmployeeAvailability isUpdatingAvailability={this.state.isUpdatingAvailability} date={this.state.date.slice(0,8)} times={times} bookings={bookings} deleteBooking={this.props.deleteBooking}/> : \"\";\n            return (\n                <div>\n                    <div>\n                        <label htmlFor=\"date\">Pick a date</label>\n                        <input name=\"date\" type=\"date\" onChange={this.handleSelectDate}/>\n                    </div>\n                    {availabilityComponent}\n                </div>\n            );\n        }\n        return \"\"\n\n    }\n}","import React from 'react';\nimport Employee from '../../model/Employee';\nimport { EmployeeSchedule } from './EmployeeSchedule';\nimport './viewEmployees.css'\nconst {apiCall} = require('../../functions/operations');\n\nexport class ViewEmployees extends React.Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            employees: localStorage.getItem('company_employees') ? JSON.parse(localStorage.getItem('company_employees')) : [],\n            selectedEmployee: null,\n            bookings:localStorage.getItem('company_bookings') ? JSON.parse(localStorage.getItem('company_bookings')) :  []\n        }\n        this._isMounted = false;\n        this.callDeleteBooking = this.callDeleteBooking.bind(this);\n        this.handleSelectEmployee = this.handleSelectEmployee.bind(this);\n    }\n\n    componentDidMount(){\n        this._isMounted=true;\n        if(!this.state.employees){\n            apiCall('company', 'getEmployees', null, \"get\" ).then(response=>{\n                if(response.statusCode===200){\n                    const employees = response.body.map(employee=>{return new Employee(employee)});\n                    this._isMounted&&this.setState({employees:employees})\n                }\n            });\n        }\n        if(!this.state.bookings){\n            apiCall('company', 'getBookings', null, \"get\").then(response=>{\n                if(response.statusCode===200){\n                    this.setState({bookings:response.body})\n                }\n            });\n        }\n\n    }\n\n    //need to delete here, otherwise children components wont re-render properly\n    callDeleteBooking(e){\n        e.preventDefault();\n        const bookingId = e.currentTarget.value;\n        apiCall('company', 'deleteBooking', bookingId, 'delete').then(response=>{\n            if(response.statusCode===204){\n                const bookings = this.state.bookings.filter(booking=>{\n                    return Number(booking.id)!==Number(bookingId);\n                });\n                this.setState({bookings:bookings})\n            }\n        })\n\n    }\n\n    handleSelectEmployee(e){\n        e.preventDefault();\n        this.setState({[e.target.name]: new Employee(JSON.parse(e.target.value))})\n    }\n\n    render(){\n        console.log(this.state)\n        if(this.state.employees.length>0){\n            const options = this.state.employees.map((employee,i)=>{\n            return <option key={i+1} value={JSON.stringify(employee)}>{`ID:${employee.id} - ${employee.name}`}</option>\n            });\n\n            return (\n                <div className=\"viewEmployee\">\n                    <h5>Select an employee</h5>\n                    <select name=\"selectedEmployee\" defaultValue={'DEFAULT'} onChange={this.handleSelectEmployee}>\n                        <option value={'DEFAULT'} disabled>Select an employee</option>\n                        {options}\n                    </select>\n                    <EmployeeSchedule deleteBooking={this.callDeleteBooking} employee={new Employee(this.state.selectedEmployee)} bookings={this.state.bookings}/>\n                </div>\n            )\n        }\n        return (\n            <div>\n                <h5>Select an Employee</h5>\n            </div>\n        );\n    }\n}","import React from 'react';\nimport AgmeServices from './AgmeServices';\nimport {CompanyServices} from './CompanyServices';\nimport AddExistingService from './AddExistingService';\nimport {ViewEmployees} from './ViewEmployees';\nimport {CompanyAppointmentList} from './CompanyAppointmentList';\n\n/**\n * A simple component to map to other components - avoid use of switch statements\n * **/\nexport default class ComponentsHandler extends React.Component{\n    render(){\n        const mapper = {\n            agmeServices: <AgmeServices/>,\n            companyServices: <CompanyServices/>,\n            addExistingServices: <AddExistingService/>,\n            viewEmployees: <ViewEmployees/>,\n            viewBookings: <CompanyAppointmentList/>\n        }\n        return mapper[this.props.component]|| \"\"\n    }\n}\n","import React from 'react';\nimport Navbar from \"../../../node_modules/react-bootstrap/Navbar\";\nimport Nav from \"../../../node_modules/react-bootstrap/Nav\";\nimport NavDropdown from \"../../../node_modules/react-bootstrap/NavDropdown\";\nimport '../css/navigationbar.css'\nimport { IoIosLogOut } from \"react-icons/io\";\nimport { IconContext } from \"react-icons\";\nimport { FaUser } from \"react-icons/fa\";\nimport {getDecodedJwtFromLocalStorage}  from \"../../functions/utils\";//Add decode func\nimport ComponentsHandler from './ComponentsHandler';\n/***\n * This class should handle the Navigation bar so that the appropriate menu's are displayed\n * ****/\nexport default class CompanyNavigationBar extends React.Component{\n\n\n    constructor(props){\n        super(props);\n        this.handleSelectNavBar = this.handleSelectNavBar.bind(this);\n    }\n\n    handleSelectNavBar(e){\n        e.preventDefault();\n        this.props.handleSelectNavBar(<ComponentsHandler component={e.target.name}/>, true);\n    }\n    render(){\n        const decodedJwtPayload = getDecodedJwtFromLocalStorage();\n        const logoutButton = ()=>{\n            if(decodedJwtPayload&&(decodedJwtPayload.exp>decodedJwtPayload.iat)){\n                return <IconContext.Provider value={{ color: 'white', size: '40px' }}>\n                  <div>\n                    <IoIosLogOut className=\"logout\" onClick={this.props.handleLogout}/>\n                  </div>\n                </IconContext.Provider>\n            }\n        }\n        return (\n            <Navbar className=\"userNavbar\">\n                    <Navbar.Brand className=\"brand\">AGME</Navbar.Brand>\n                    <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n                    <Navbar.Collapse id=\"basic-navbar-nav\">\n                        <Nav className=\"mr-auto\">\n                        <NavDropdown.Item className=\"userName\" ><FaUser /><span name=\"viewBookings\" onClick={this.handleSelectNavBar}>{decodedJwtPayload.sub}</span></NavDropdown.Item>\n                            <NavDropdown title=\"Services\" id=\"basic-nav-dropdown\">\n                                <NavDropdown.Item name=\"providers\" onClick={this.props.handleSelectNavBar}>Providers</NavDropdown.Item>\n                                <NavDropdown.Divider />\n                                <NavDropdown.Item name=\"agmeServices\" onClick={this.handleSelectNavBar}>Agme Services</NavDropdown.Item>\n                                <NavDropdown.Item name=\"companyServices\" onClick={this.handleSelectNavBar}>My Services</NavDropdown.Item>\n                                <NavDropdown.Item name=\"addExistingServices\" onClick={this.handleSelectNavBar}>Add a new service</NavDropdown.Item>\n                            </NavDropdown>\n                            <NavDropdown title=\"Employees\" id=\"basic-nav-dropdown\">\n                                <NavDropdown.Item name=\"viewEmployees\" onClick={this.handleSelectNavBar}>View Employees</NavDropdown.Item>\n                            </NavDropdown>\n                            <NavDropdown title=\"Bookings\" id=\"basic-nav-dropdown\">\n                                <NavDropdown.Item name=\"viewBookings\" onClick={this.handleSelectNavBar}>View and Search Bookings</NavDropdown.Item>\n                            </NavDropdown>\n                        </Nav>\n                    </Navbar.Collapse>\n                    {logoutButton()}\n                </Navbar>\n        )\n    }\n}\n","/***\n * This class deals with the complexity of managing an employee's availability\n * ***/\nconst {apiCall, fetchFromApi,getDecodedJwtFromLocalStorage} = require('../functions/operations');\nconst config = require('../config.json');\nexport default class EmployeeAvailabilityManager{\n    constructor(state,callback){\n        this.state = state;\n        this.callback = callback;\n        /**\n         * DO NOT remove this conditional statement, otherwise the component\n         * will keep calling the server forever\n         * ***/\n        if(!this.state.availabilityManagerIsReady){\n            this.getDummyUser()\n        }\n        this._isMounted = false;\n    }\n    componentWillUnmount(){\n        this._isMounted = false;\n    }\n\n    componentDidMount(){\n        this._isMounted = true;\n    }\n\n    setDate(date){\n        const year = Number(date.split(\"-\")[0]) - 2000;\n        const month = date.split(\"-\")[1];\n        const day = date.split(\"-\")[2]\n        this.date = `${day}-${month}-${year}`;\n        this.filterAppointmentsByDate();\n    }\n\n    setTime(time){\n        this.time = time;\n    }\n\n    setDuration(duration){\n        this.duration = duration\n    }\n\n    //called whenever a new start date time is selected\n    filterAppointmentsByDate(){\n        if(this.appointments){\n            if(this.date){\n                const times = {};\n                for(let i = 0; i < 24; i++){\n                    times[i] = null\n                }\n                \n                this.filteredAppointments = this.appointments.filter(appointment=>{\n                    if(appointment.startDateTime.includes(this.date)){\n                        //block time\n                        const hour = Number(appointment.startDateTime.split(\" \")[1].split(\":\")[0])\n                        for(let i = hour; i < hour+appointment.duration; i++){\n                            times[i] = appointment\n                        }\n                        return true;\n                    }\n                    return false;\n                });\n                this.times = times;\n            }\n        }\n    }\n\n    //Use the dummy user to block some time;\n    async blockTime(callback){\n        callback(true); //so that modal shows spinner\n        const jwt = this.credentials.jwt;\n        if(!jwt){return false;}\n        const year = Number(this.date.split(\"-\")[2])+2000;\n        const month = Number(this.date.split(\"-\")[1]) <10 ? \"0\"+Number(this.date.split(\"-\")[1]).toString():Number(this.date.split(\"-\")[1]);\n        const day = Number(this.date.split(\"-\")[0])<10 ? \"0\"+Number(this.date.split(\"-\")[0]).toString(): Number(this.date.split(\"-\")[0]);\n        const time = \"T\"+(Number(this.time) <10 ? \"0\"+Number(this.time).toString() : this.time)+\":00:00.000+00:00\"\n        const username = getDecodedJwtFromLocalStorage().sub;\n        const payload = {\n            \"serviceType\": \"GYM\",\n            \"date\": `${year}-${month}-${day}${time}`,\n            \"duration\": 1,\n            \"employeeUsername\": username\n        }\n        const headers = {\n            \"Content-Type\": \"application/JSON\",\n            Accept: \"application/JSON\",\n            'Access-Control-Allow-Origin': '*',\n            Authorisation: \"Bearer \"+jwt\n        }\n        const options ={\n            method: \"POST\",\n            body: JSON.stringify(payload),\n            headers:headers\n        }\n        const url = config.api.url;\n        const uri = config.api.uri.user.newBooking;\n        try{\n            fetchFromApi(url,uri,options).then(response=>{\n                if(response.statusCode===200){\n                    this.times[this.time] = response.body;\n                    callback(false,response.statusCode);\n                    //updateLocalStorage\n                    let employeeBookings = localStorage.getItem(\"employee_bookings\") ? JSON.parse(localStorage.getItem(\"employee_bookings\")) : [];\n                    employeeBookings.push(response.body);\n                    localStorage.setItem('employee_bookings', JSON.stringify(employeeBookings))\n                }else{\n                    throw new Error(\"did not work\")\n                }\n            });\n        }catch(e){\n            //Todo - need to pass message that some error happened\n            callback(false, \"UNKNOWN_ERROR\");\n        }\n       \n    }\n\n    async getDummyUser(){\n        const payload = {\n            \"username\": \"dummy\",\n            \"password\": \"12345678\",\n            \"role\": \"USER\"\n        }\n\n\n        //no need to call api again if already set in localStorage\n        if(localStorage.getItem(\"employee_dummy_user_credentials\")){\n            if(JSON.parse(localStorage.getItem(\"employee_dummy_user_credentials\"))){\n                this.failed = false;\n                this.credentials = JSON.parse(localStorage.getItem(\"employee_dummy_user_credentials\"));\n                this.callback(this, 200);\n            }\n        }else{\n            apiCall('common', 'login', payload, 'post').then(response=>{\n                if(response.statusCode===200){\n                    \n                    localStorage.setItem('employee_dummy_user_credentials',JSON.stringify(response.body))\n                }else{\n                    this.failed = true;\n                }\n                this.credentials = response.body;\n                //inform component this is ready\n                this.callback(this, response.statusCode);\n            });\n        }\n\n        //not guaranteed which call will finish first\n        if(localStorage.getItem(\"employee_bookings\")){\n            this.appointments = JSON.parse(localStorage.getItem(\"employee_bookings\"));\n            this.callback(this, false, 200);\n        }else{\n            apiCall('employee', 'getBookings', null, 'get').then(response=>{\n                if(response.statusCode===200){\n                    this.appointments = response.body\n                }\n                this.callback(this, false, response.statusCode);\n            })\n        }\n\n    }\n\n    isDummyAppointment(){\n        return this.times[this.time]&&(this.times[this.time].user.username===\"dummy\");\n    }\n\n    deleteBooking(callback){\n        callback(true); //so that modal shows spinner\n        const bookingId = this.times[this.time].id;\n        const headers = {\n            \"Content-Type\": \"application/JSON\",\n            Accept: \"application/JSON\",\n            'Access-Control-Allow-Origin': '*',\n            Authorisation: \"Bearer \"+this.credentials.jwt\n        }\n        const options ={\n            method: \"DELETE\",\n            body: bookingId,\n            headers:headers\n        }\n        const url = config.api.url;\n        const uri = config.api.uri.user.deleteBooking;\n        try{\n            fetchFromApi(url,uri,options).then(response=>{\n                if([200,204].includes(response.statusCode)){\n                    //there might be multiple slots involved\n                    Object.keys(this.times).forEach(key=>{\n                        if((this.times[key])&&(this.times[key].id===bookingId)){\n                            this.times[key]= null;\n                        }\n                    });\n\n                    //update localStorage\n                    const employeeBookings = JSON.parse(localStorage.getItem(\"employee_bookings\"));\n                    if(employeeBookings&&employeeBookings.length){\n                        const filteredBookings = employeeBookings.filter(b=>{\n                            return b.id!==bookingId\n                        });\n                        localStorage.setItem(\"employee_bookings\",JSON.stringify(filteredBookings))\n                    }\n                    callback(false,response.statusCode);\n                }else{\n                    throw new Error(\"did not work\")\n                }\n            });\n        }catch(e){\n            //Todo - need to pass message that some error happened\n            callback(false, \"UNKNOWN_ERROR\");\n        }  \n    }\n\n}","import React from 'react';\nimport Button from \"react-bootstrap/Button\";\nimport { BsToggleOn, BsToggleOff } from \"react-icons/bs\";\nimport Modal from 'react-bootstrap/Modal';\nimport Spinner from 'react-bootstrap/Spinner'\nimport BootstrapTable from 'react-bootstrap-table-next';\nimport './dailyschedule.css'\nexport default class DailySchedule extends React.Component{\n\n    constructor(props){\n        super(props);\n        this.state = {\n            showModal : false,\n            isUpdatingAvailability:false\n        }\n        this.callback = this.callback.bind(this);\n        this._isMounted = false;\n    }\n\n    componentDidMount(){\n        this._isMounted = true;\n    }\n    componentWillUnmount(){\n        this._isMounted = false;\n    }\n    /**\n     * A callback function to pass to EmployeeAvailabilityManager\n     * **/\n    callback(isUpdatingAvailability, error){\n        this._isMounted&&this.setState({isUpdatingAvailability:isUpdatingAvailability,showModal:isUpdatingAvailability, error:error});\n    }\n\n    modalTitle(){\n        if(this.state.selectedAppointment){\n            const isDummyAppointment = this.props.employeeAvailabilityManager.isDummyAppointment();\n            if(isDummyAppointment){\n                return `Unblock time slot ${this.props.employeeAvailabilityManager.date} from ${this.props.employeeAvailabilityManager.time}:00 to ${Number(this.props.employeeAvailabilityManager.time)+1}:00`\n            }\n            return \"Cancel Booking\"\n        }else{\n            if(this.state.isUpdatingAvailability){\n                return `Blocking ${this.props.employeeAvailabilityManager.date} from ${this.props.employeeAvailabilityManager.time}:00 to ${Number(this.props.employeeAvailabilityManager.time)+1}:00`\n\n            }else{\n                return `Block slot ${this.props.employeeAvailabilityManager.date} from ${this.props.employeeAvailabilityManager.time}:00 to ${Number(this.props.employeeAvailabilityManager.time)+1}:00`\n            }\n        }\n    }\n    modalBody(){\n        if(this.state.isUpdatingAvailability){\n            return <div>\n                <Spinner animation=\"border\" role=\"status\"/>\n                Please wait while we block the time slot {this.props.employeeAvailabilityManager.date} from {this.props.employeeAvailabilityManager.time}:00 to  {Number(this.props.employeeAvailabilityManager.time)+1}:00\n            </div>\n        }\n        if(this.state.selectedAppointment){\n            const isDummyAppointment = this.props.employeeAvailabilityManager.isDummyAppointment();\n            if(isDummyAppointment){\n                return \"By confirming you will make this slot time available again.\"\n            }else{\n                return \"You are about to cancel an appointment. You cannot partially cancel the appointment. If the appointment is booked for more than 1 hour, the whole slot will be canceled.\"\n            }\n        }else{\n            return \"Please confirm to block this time slot. Once you confirm it, no user will be able to see this slot as available.\"\n        }\n    }\n\n    modalFooter(){\n        if(this.state.isUpdatingAvailability){\n            return \"\";\n        }\n        if(this.state.selectedAppointment){\n            const isDummyAppointment = this.props.employeeAvailabilityManager.isDummyAppointment();\n            if(isDummyAppointment){\n                return (\n                    <div>\n                        <Button className=\"footer_buttons\" variant=\"primary\" onClick={e=>{\n                            e.preventDefault();\n                            this.props.employeeAvailabilityManager.deleteBooking(this.callback);\n                            }}>Confirm\n                        </Button>\n                        <Button  className=\"footer_buttons\" variant=\"secondary\" onClick={e=>{\n                            e.preventDefault();\n                            this.setState({showModal:false})\n                            }}>Cancel\n                        </Button>\n                    </div>\n                );\n            }\n            return (\n                <div>\n                    <Button className=\"footer_buttons\" variant=\"danger\" onClick={e=>{\n                        e.preventDefault();\n                        this.props.employeeAvailabilityManager.deleteBooking(this.callback);\n                    }}>Confirm\n                    </Button>\n                    <Button  className=\"footer_buttons\" variant=\"secondary\" onClick={e=>{\n                        e.preventDefault();\n                        this.setState({showModal:false})\n                        }}>Cancel\n                    </Button>\n            </div>\n            );\n        }else{\n            return (\n                <div>\n                    <Button className=\"footer_buttons\" variant=\"danger\" onClick={e=>{\n                        e.preventDefault();\n                        this.props.employeeAvailabilityManager.blockTime(this.callback)\n                        \n                        }}>Block it\n                    </Button>\n                    <Button  className=\"footer_buttons\" variant=\"secondary\" onClick={e=>{\n                        e.preventDefault();\n                        this.setState({showModal:false})\n                        }}>Cancel\n                    </Button>\n                </div>\n                \n            );\n        }\n    }\n    render(){\n        if(this.props.employeeAvailabilityManager&&this.props.employeeAvailabilityManager.times){\n\n\n            const columns = [{\n                dataField: 'time',\n                text: 'Time slot'\n              }, {\n                dataField: 'status',\n                text: 'Availability'\n              },{\n                dataField: 'details',\n                text: 'Details'\n              }\n            ];\n\n            let rows = [];\n            for(let i = 8 ; i < 18; i++){\n                const isAvailable = this.props.employeeAvailabilityManager.times[i] ===null;\n                let status;\n                let details = \"Available\"\n                if(isAvailable){\n                    status = <BsToggleOn className=\"available\" onClick={e=>{\n                        e.preventDefault();\n                        this.props.employeeAvailabilityManager.setTime(i)\n                        this.setState({\n                            showModal:true,\n                            selectedAppointment:this.props.employeeAvailabilityManager.times[i]\n                            })\n                        }}\n                    />\n                }else{\n                    const name = this.props.employeeAvailabilityManager.times[i]&&this.props.employeeAvailabilityManager.times[i].user.name;\n                    const isDummy = (this.props.employeeAvailabilityManager.times[i]&&this.props.employeeAvailabilityManager.times[i].user.username) === \"dummy\";\n                    if(isDummy){\n                        details = \"You blocked this time slot\"\n                    }else{\n                        details = \"You are providing service to \"+name;\n                    }\n                    status = <BsToggleOff className=\"unvailable\" onClick={e=>{\n                        e.preventDefault();\n                        this.props.employeeAvailabilityManager.setTime(i)\n                        this.setState({\n                            showModal:true,\n                            selectedAppointment:this.props.employeeAvailabilityManager.times[i]\n                            })\n                        }}\n                    />\n                }\n                rows.push({\n                    time: i,\n                    status: status,\n                    details: details\n                })\n            }\n\n            return (\n                <div className=\"employee_schedule\">\n                    <div>\n                        <h4>Daily Schedule</h4>\n                    </div>\n                    <Modal show={this.state.showModal}>\n                            <Modal.Dialog>\n                                <Modal.Header>\n                                    <Modal.Title>{this.modalTitle()}</Modal.Title>\n                                </Modal.Header>\n            \n                                <Modal.Body>\n                                    {this.modalBody()}\n                                </Modal.Body>\n            \n                                <Modal.Footer>\n                                      {this.modalFooter()}                          \n                                </Modal.Footer>\n                            </Modal.Dialog>\n                        </Modal>\n                    \n                    <div className=\"upcoming_appointments_table\" >\n                        <BootstrapTable keyField='id' data={ rows } columns={ columns }/>\n                    </div>\n                </div>\n            );\n        }else{\n            return (\n                <div>Loading schedule</div>\n            );\n        }\n    }\n}","import React from 'react';\nimport EmployeeAvailabilityManager from '../../model/EmployeeAvailabilityManager';\nimport Spinner from 'react-bootstrap/Spinner';\nimport DailySchedule from './DailySchedule';\n\nexport default class AppointsManagement extends React.Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            date: \"\"\n        }\n        this.updateComponent = this.updateComponent.bind(this);\n        this._isMounted = false;\n    }\n\n    /**\n     * To make sure the EmployeeAvailabilityManager is called only after\n     * the component has mounted\n     * **/\n    componentDidMount(){\n        this._isMounted = true;\n        new EmployeeAvailabilityManager(this.state,this.updateComponent)\n    }\n\n    componentWillUnmount(){\n        this._isMounted = false;\n    }\n\n    updateComponent(employeeAvailabilityManager, dummyUserStatus,appointmentsStatus){\n        if(dummyUserStatus){\n            this._isMounted &&this.setState({\n                employeeAvailabilityManager:employeeAvailabilityManager,\n                dummyUserStatus:dummyUserStatus\n            });\n        }else{\n            this._isMounted &&this.setState({\n                employeeAvailabilityManager:employeeAvailabilityManager,\n                appointmentsStatus:appointmentsStatus\n            });          \n        }\n    }\n\n    render(){\n        if(this.state.dummyUserStatus&&this.state.appointmentsStatus){\n            if((this.state.dummyUserStatus===200)&&(this.state.appointmentsStatus===200)){\n                return (\n                    <div>\n                        <input type=\"date\" name=\"date\" onChange={e=>{\n                            e.preventDefault();\n                            this.state.employeeAvailabilityManager.setDate(e.target.value);\n                            this.setState({date:e.target.value}) //to force re-render child component\n\n                            }}\n                        />\n                        <DailySchedule date={this.state.date} employeeAvailabilityManager={this.state.employeeAvailabilityManager}/>\n                    </div>\n                );\n            }else{\n                return (\n                    <div>Oooops, sorry we cannot fulfill your request now.</div>\n                );\n            }\n        }else{\n            return (\n            <div>\n                <Spinner animation=\"border\" role=\"status\">\n                    <span className=\"sr-only\">Loading...</span>\n                </Spinner>\n                <p>Please wait while we take care of a few things before you can manage your schedule.</p>\n                <p>This may take a while.</p>\n            </div>                  \n            );\n        }\n    }\n}","import React from 'react';\nimport AppointsManagement from './AppointsManagement';\nimport EmployeeDashboard from './EmployeeDashboard';\n\n/**\n * A simple component to map to other components - avoid use of switch statements\n * **/\nexport default class ComponentsHandler extends React.Component{\n    render(){\n        const mapper = {\n            appointsManagement: <AppointsManagement/>,\n            employeeDashboard: <EmployeeDashboard/>\n        }\n        return mapper[this.props.component]||\"\"\n    }\n}","import React from 'react';\nimport Navbar from \"../../../node_modules/react-bootstrap/Navbar\";\nimport Nav from \"../../../node_modules/react-bootstrap/Nav\";\nimport NavDropdown from \"../../../node_modules/react-bootstrap/NavDropdown\";\nimport '../css/navigationbar.css'\nimport { IoIosLogOut } from \"react-icons/io\";\nimport { IconContext } from \"react-icons\";\nimport {FaUser} from \"react-icons/fa\";\nimport {getDecodedJwtFromLocalStorage}  from \"../../functions/utils\";//Add decode func\nimport ComponentsHandler from './ComponentsHandler';\n/***\n * This class should handle the Navigation bar so that the appropriate menu's are displayed\n * ****/\nexport default class EmployeeNavigationBar extends React.Component{\n\n\n    constructor(props){\n        super(props);\n        this.handleSelectNavBar = this.handleSelectNavBar.bind(this);\n    }\n\n    handleSelectNavBar(e){\n        e.preventDefault();\n        this.props.handleSelectNavBar(<ComponentsHandler component={e.target.name}/>, true);\n    }\n    render(){\n        const decodedJwtPayload = getDecodedJwtFromLocalStorage();\n        const logoutButton = ()=>{\n            if(decodedJwtPayload&&(decodedJwtPayload.exp>decodedJwtPayload.iat)){\n                return <IconContext.Provider value={{ color: 'white', size: '40px' }}>\n                  <div>\n                    <IoIosLogOut className=\"logout\" onClick={this.props.handleLogout}/>\n                  </div>\n                </IconContext.Provider>\n            }\n        }\n        return (\n            <Navbar className=\"userNavbar\">\n                    <Navbar.Brand className=\"brand\">AGME</Navbar.Brand>\n                    <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n                    <Navbar.Collapse id=\"basic-navbar-nav\">\n                        <Nav className=\"mr-auto\">\n                        <NavDropdown.Item className=\"userName\"><FaUser/>{decodedJwtPayload.sub}</NavDropdown.Item>\n                            <NavDropdown title=\"Services\" id=\"basic-nav-dropdown\">\n                                <NavDropdown.Item name=\"appointsManagement\" onClick={this.handleSelectNavBar}>Manage my appointments</NavDropdown.Item>\n                                <NavDropdown.Item name=\"employeeDashboard\" onClick={this.handleSelectNavBar}>My Dashboard</NavDropdown.Item>\n\n                            </NavDropdown>\n                            <Nav.Link name=\"help\" onClick={this.props.handleSelectNavBar}>Help/Report</Nav.Link>\n\n                        </Nav>\n\n                    </Navbar.Collapse>\n                    {logoutButton()}\n                </Navbar>\n        )\n    }\n}\n","import React from 'react';\nimport {getDecodedJwtFromLocalStorage}  from \"../functions/utils\";//Add decode func\nimport ProviderNavigationBar from './providers/ProviderNavigationBar';\nimport UserNavigationBar from './users/UserNavigationBar';\nimport AdminNavigationBar from './administrators/AdminNavigationBar'\nimport VisitorNavigationBar from './visitors/VisitorNavigationBar'\nimport CompanyNavigationBar from './company/CompanyNavigationBar';\nimport EmployeeNavigationBar from './employee/EmployeeNavigationBar';\nimport './css/navigationbar.css';\n/***\n * This class should handle the Navigation bar so that the appropriate menu's are displayed\n * ****/\nexport default class NavigationBar extends React.Component{\n\n    render(){\n        const decodedJwtPayload = getDecodedJwtFromLocalStorage();\n        const expired = decodedJwtPayload&&((decodedJwtPayload.exp - new Date().getTime()/1000)  < 0);\n        if(decodedJwtPayload&&(!expired)){\n            if(decodedJwtPayload.role.toUpperCase().includes('PROVIDER')){\n                return (\n                    <ProviderNavigationBar \n                        handleLogout={this.props.handleLogout} \n                        token={this.props&&this.props.token} \n                        handleSelectNavBar={this.props.handleSelectNavBar}\n                        />\n                )\n            }else if(decodedJwtPayload.role.toUpperCase().includes('USER')){\n                return (\n                    <UserNavigationBar \n                        handleLogout={this.props.handleLogout} \n                        token={this.props&&this.props.token} \n                        handleSelectNavBar={this.props.handleSelectNavBar}\n                    />\n                )\n            }else if(decodedJwtPayload.role.toUpperCase().includes('ADMIN')){\n                return (\n                <AdminNavigationBar \n                    handleLogout={this.props.handleLogout} \n                    token={this.props&&this.props.token} \n                    handleSelectNavBar={this.props.handleSelectNavBar}    \n                />\n                )\n            }else if(decodedJwtPayload.role.toUpperCase().includes('COMPANY')){\n                return (\n                <CompanyNavigationBar \n                    handleLogout={this.props.handleLogout} \n                    token={this.props&&this.props.token} \n                    handleSelectNavBar={this.props.handleSelectNavBar}    \n                />\n                )\n            }else if(decodedJwtPayload.role.toUpperCase().includes('EMPLOYEE')){\n                return (\n                <EmployeeNavigationBar \n                    handleLogout={this.props.handleLogout} \n                    token={this.props&&this.props.token} \n                    handleSelectNavBar={this.props.handleSelectNavBar}    \n                />\n                )\n            }else{\n                /***\n                 * Should never enter this block unless token was tampered\n                 * ***/\n                localStorage.removeItem('credentials');\n                throw new Error({\n                    errorId: \"INVALID_LOGIN\",\n                    message: \"Your session has expired. Please refresh your browser.\"\n                })\n            }\n\n        }else{\n            //no user authenticated\n            return (\n                <VisitorNavigationBar handleSelectNavBar={this.props.handleSelectNavBar}/>\n            )\n        }\n\n\n    }\n}","import React from 'react';\nexport default class CustomisedError extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = { hasError: false };\n    }\n\n    static getDerivedStateFromError(error) {\n        // Update state so the next render will show the fallback UI.\n        console.log(error)\n        return { hasError: true };\n    }\n\n    componentDidCatch(error, errorInfo) {\n        console.log(error)\n        console.log(errorInfo)\n    }\n\n    render() {\n        if (this.state.hasError) {\n            // You can render any custom fallback UI\n            return <div>\n                <h1>An unexpected error has occurred</h1>\n                    <p>Please refresh your browser</p>\n            </div>;\n        }\n\n        return this.props.children;\n    }\n}","import React from 'react';\nimport './pages/css/App.css';\nimport LandingPage from \"./pages/LandingPage\";\nimport Signup from \"./pages/Signup\";\nimport Login from \"./pages/Login\";\nimport Help from \"./pages/Help\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport {getDecodedJwtFromLocalStorage}  from \"./functions/utils\";//Add decode func\nimport ViewProviders from './pages/users/ViewProviders';\nimport NavigationBar from './pages/NavigationBar';\nimport CustomisedError from \"./miscelaneous/CustomisedError\";\nconst { getResources}  = require( \"./functions/operations\");//Add decode func\n\n/**\n * Basic Flow\n * \n * 1. If User has an active token stored (has been authenticated), show relevant content\n *  The token will tell what type of content to show\n *  - Administrators\n *  - Providers\n *  - Basic users\n * \n * **/\nexport default class App extends React.Component{\n\n    constructor(){\n        super();\n        const authDetails = getDecodedJwtFromLocalStorage();\n        const expired = authDetails&&((authDetails.exp - new Date().getTime()/1000)  < 0);\n        if(authDetails){\n\n            this.state = {\n                authenticated: !expired,\n                token:((!expired)&&localStorage.getItem('credentials')) || null,\n                content: \"\",\n                type: authDetails.role\n            }\n        }\n\n        this.handleAuthentication = this.handleAuthentication.bind(this);\n        this.handleLogout = this.handleLogout.bind(this);\n        this.handleContentChangeRequest = this.handleContentChangeRequest.bind(this)\n        this.handleContentChangeRequestSignup = this.handleContentChangeRequestSignup.bind(this)\n\n\n    }\n    componentWillUnmount(){\n        this._isMounted = false;\n    }\n\n    componentDidMount(){\n        this._isMounted = true;\n        if(this._isMounted){\n            this.setState({\n                content:<LandingPage \n                    authenticated={this.state&&this.state.authenticated} \n                    handleAuthentication={this.handleAuthentication} \n                    handleContentChangeRequest={this.handleContentChangeRequest}\n                    handleContentChangeRequestSignup={this.handleContentChangeRequestSignup}\n                    type={this.state&&this.state.type}\n                    expiry={this.state&&this.state.expiry}\n                    />\n                })\n        }\n    }\n\n    //To handle component change\n    handleContentChangeRequest(e, isComponent){\n        try{\n            e.preventDefault();\n        }catch(error){}\n        let component = \"\";\n\n        //to let each navbar to change component rendered directly\n        if(isComponent){\n            component = e;\n        }else{\n            const contentString = e.target ? e.target.getAttribute('name') : e;\n            switch(contentString){\n                case \"signup\":\n                    component = <Signup handleAuthentication={this.handleAuthentication} handleContentChangeRequest={this.handleContentChangeRequest} handleContentChangeRequestSignup={this.handleContentChangeRequestSignup}/>\n                    break;\n                case \"providers\":\n                    component = <ViewProviders/>\n                    break;\n                case \"login\":\n                    component = <Login handleContentChangeRequest={this.handleContentChangeRequest} handleContentChangeRequestSignup={this.handleContentChangeRequestSignup} handleAuthentication={this.handleAuthentication}/>\n                    break;\n                case \"help\":\n                    component = <Help handleContentChangeRequest={this.handleContentChangeRequest} />\n                    break;\n                default:\n                    console.log(\"no content available?\");\n            }  \n        }\n        this._isMounted&&this.setState({content:component})\n    }\n    handleContentChangeRequestSignup(componentName){\n \n        const contentString = componentName;\n        let component = \"\";\n        switch(contentString){\n            case \"signup\":\n                component = <Signup handleContentChangeRequestSignup={this.handleContentChangeRequestSignup} handleContentChangeRequest={this.handleContentChangeRequest}/>\n                break;\n            case \"providers\":\n                component = <ViewProviders/>\n                break;\n            case \"login\":\n                component = <Login handleContentChangeRequest={this.handleContentChangeRequest} handleAuthentication={this.handleAuthentication}/>\n                break;\n            default:\n                console.log(\"no content available?\");\n        }  \n        this._isMounted&&this.setState({content:component})\n    }\n\n    handleAuthentication(){\n        getResources();\n        //save to local storage to persist\n        const credentials = JSON.parse(localStorage.getItem('credentials'));\n        const authDetails = getDecodedJwtFromLocalStorage();\n        const expired = authDetails&&((authDetails.exp - new Date().getTime()/1000)  < 0);\n\n        if((!credentials)||expired){return;}\n\n        const role = authDetails.role\n        this._isMounted&&this.setState({\n            token:authDetails.jwt,\n            authenticated: true,\n            role: authDetails.role, \n            content:<LandingPage \n                authenticated={true} \n                handleAuthentication={this.handleAuthentication} \n                handleContentChangeRequest={this.handleContentChangeRequest}\n                type={role}\n                token={authDetails.jwt}\n                expiry={authDetails.expiry}\n                />\n        })\n    }\n\n    handleLogout(e){\n        e.preventDefault();\n        //clear localStorage\n        localStorage.clear();\n        this.setState({\n            token:null,\n            authenticated:false,\n            expiry: null,\n            content:<LandingPage handleAuthentication={this.handleAuthentication} handleContentChangeRequest={this.handleContentChangeRequest}/>\n        })\n    }\n    render(){\n        return (\n            <div className=\"App\">\n                <CustomisedError>\n                    <NavigationBar handleLogout={this.handleLogout} token={this.state&&this.state.token} handleSelectNavBar={this.handleContentChangeRequest}/>\n                    {this.state&&this.state.content}\n                </CustomisedError>\n            </div>\n        );\n    }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\nserviceWorker.unregister();"],"sourceRoot":""}